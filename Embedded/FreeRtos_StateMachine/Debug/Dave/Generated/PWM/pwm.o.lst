   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_EnableClock:
  25              	.LFB151:
  26              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc/xmc_ccu4.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-09-15
   4:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.18 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  46:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  49:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  54:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  58:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  64:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  67:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  71:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  74:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  77:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  78:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  79:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  80:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  81:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  82:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  83:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  84:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  85:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  86:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  87:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  88:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  89:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  90:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  91:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  92:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  93:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  94:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  95:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  96:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  97:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
  98:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  99:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 100:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 101:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 102:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 103:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 104:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 105:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 106:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 107:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 108:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 109:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 110:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 111:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 112:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 113:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 114:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 115:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 116:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 117:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 118:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 119:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 120:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 121:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 122:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 123:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 124:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 125:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 126:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 127:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 128:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 129:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 130:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 131:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 132:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 133:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 134:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 135:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 136:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 137:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 138:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 139:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 140:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 141:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 142:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 144:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 145:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 147:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 148:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 149:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 150:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 151:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 152:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 153:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 154:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 155:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 156:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 157:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 158:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 159:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 160:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 161:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 162:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 163:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 164:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 165:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 166:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 167:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 168:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 169:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 170:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 171:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 172:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 173:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 174:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 175:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 176:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 177:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 179:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 180:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 181:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 182:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 184:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 185:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 186:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 187:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 188:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 189:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 190:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 192:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 193:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 195:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 196:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 197:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 198:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 199:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 200:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 201:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 202:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 206:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 207:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 208:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 209:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 211:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 212:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 213:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 214:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 215:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 217:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 218:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 219:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 220:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 221:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 222:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 223:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 225:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 226:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 227:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 228:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 229:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 230:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 231:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 232:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 233:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 234:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 235:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 237:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 238:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 239:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 240:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 241:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 242:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 243:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 244:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 249:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 250:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 251:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 252:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 253:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 254:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 255:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 257:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 258:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 259:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 260:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 261:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 262:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 263:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 264:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 265:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 266:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 267:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 268:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 269:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 270:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 271:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 272:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 273:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 275:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 276:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 277:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 278:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 279:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 280:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 281:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 282:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 283:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 284:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 285:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 286:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 287:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 288:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 289:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 290:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 291:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 292:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 293:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 294:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 295:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 296:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 298:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 299:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 300:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 301:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 303:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 304:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 305:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 306:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 307:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 308:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 309:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 310:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 311:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 312:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 313:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 314:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 316:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 317:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 318:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 319:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 320:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 321:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 322:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 323:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 324:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 325:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 326:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 327:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 328:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 330:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 331:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 332:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 333:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 334:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 335:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 336:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 337:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 338:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 339:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 340:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 341:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 342:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 343:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 347:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 348:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 349:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 350:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 351:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 352:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 353:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 354:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 355:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 356:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 358:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 359:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 360:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 361:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 362:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 363:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 364:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 365:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 366:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 367:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 368:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 369:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 370:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 371:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 372:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 373:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 374:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 375:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 376:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 377:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 378:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 379:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 380:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 381:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 382:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 383:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 384:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 385:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 386:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 387:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 388:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 389:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 390:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 391:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 393:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 394:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 395:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 396:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 397:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 398:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 399:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 400:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 401:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 402:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 403:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 404:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 405:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 406:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 407:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 408:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 409:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 410:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 411:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 412:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 413:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 414:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 415:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 416:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 417:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 418:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 419:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 420:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 421:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 422:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 423:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 424:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 425:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 426:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 427:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 428:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 430:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 431:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 432:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 433:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 434:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 435:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 436:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 437:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 438:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 439:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 440:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 441:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 442:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 443:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 444:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 445:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 446:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 448:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 449:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 450:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 451:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 452:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 453:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 454:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 455:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 456:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 457:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 458:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 459:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 460:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 461:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 462:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 463:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 464:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 465:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 466:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 467:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 468:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 469:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 470:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 471:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 472:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 473:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 474:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 475:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 476:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 477:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 478:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 479:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 480:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 481:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 482:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 483:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 484:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 485:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 486:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 487:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 488:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 489:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 490:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 491:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 492:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 493:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 494:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 495:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 496:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 497:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 498:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 499:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 500:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 501:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 502:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 503:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 504:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 505:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 506:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 507:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 508:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 509:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 510:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 511:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 512:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 513:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 514:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 515:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 516:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 517:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 518:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 519:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 520:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 521:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 522:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 523:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 524:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 525:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 526:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 527:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 528:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 529:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 530:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 531:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 532:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 533:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 534:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 535:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 536:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 537:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 539:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 540:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 541:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 542:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 543:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 544:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 545:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 546:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 547:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 548:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 551:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 553:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 554:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 557:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 559:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 560:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 561:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 562:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 563:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 564:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 565:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 566:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 567:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 568:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 569:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 570:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 571:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 572:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 573:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 574:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 575:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 576:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 577:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 579:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 580:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 583:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 584:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 586:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 588:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 590:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 591:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 592:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 593:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 594:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 595:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 596:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 597:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 598:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 599:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 600:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 601:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 602:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 603:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 604:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 605:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 606:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 607:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 608:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 609:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 610:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 611:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 612:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 613:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 614:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 615:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 616:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 617:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 618:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 619:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 620:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 621:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 622:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 623:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 624:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 625:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 626:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 627:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 628:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 629:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 630:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 631:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 632:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 633:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 634:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 635:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 636:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 637:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 638:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 639:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 640:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 641:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 642:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 643:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 644:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 645:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 646:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 647:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 648:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 649:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 650:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 651:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 652:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 653:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 654:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 655:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 656:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 657:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 658:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 659:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 660:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 661:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 662:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 663:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 664:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 665:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 666:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 667:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 668:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 669:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 670:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 671:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 672:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 673:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 674:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 675:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 676:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 677:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 678:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 679:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 680:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 681:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 682:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 683:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 684:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 685:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 686:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 687:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 688:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 689:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 690:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 691:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 692:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 693:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 694:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 695:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 696:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 697:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 698:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 699:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 700:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 701:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 702:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 703:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 704:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 705:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 706:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 707:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 708:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 709:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 710:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 711:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 712:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 713:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 714:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 715:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 716:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 717:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 718:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 719:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 720:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 721:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 722:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 723:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 724:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 725:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 726:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 727:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 728:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 729:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 730:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 731:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 732:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 733:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 734:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 735:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 736:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 737:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 738:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 739:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 740:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 741:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 742:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 743:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 744:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 745:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 746:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 747:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 748:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 749:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 750:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 751:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 752:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 753:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 754:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 755:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 756:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 757:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 758:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 759:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 760:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 761:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 762:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 763:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 764:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 765:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 766:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 767:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 768:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 769:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 770:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 771:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 772:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 773:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 774:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 775:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 776:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 777:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 778:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 779:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 780:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 781:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 782:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 783:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 784:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 785:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 786:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 787:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 788:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 789:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 790:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 791:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 792:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 793:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 794:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 795:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 796:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 797:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 798:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 799:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 800:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 801:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 802:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 803:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 804:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 805:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 806:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 807:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 808:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 809:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 810:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 811:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 812:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 814:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 815:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 816:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 817:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 818:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 820:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 821:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 822:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 823:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 824:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 825:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 826:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 827:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 828:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 829:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 830:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 831:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 832:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 833:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 834:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 835:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 836:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 837:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 838:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 839:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 840:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 841:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 842:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 843:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 845:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 846:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 847:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 848:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 849:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 853:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 855:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 856:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 857:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 858:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 859:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 861:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 862:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 863:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 864:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 865:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 866:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
 867:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 868:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 869:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 870:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 871:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 872:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 873:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 874:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 875:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 876:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 877:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 878:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 879:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 880:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 881:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 882:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 883:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 884:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 885:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 886:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 887:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 888:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 889:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 890:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 891:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 892:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 893:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 894:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 895:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 896:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 897:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 898:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 899:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 900:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 901:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 902:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 903:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 904:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 905:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 906:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 907:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 908:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 909:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 910:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 911:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 912:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 913:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 914:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 915:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 916:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 917:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 918:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 919:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 920:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 921:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 922:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 923:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 924:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 925:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 926:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 927:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 928:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 929:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 930:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 931:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 932:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 933:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 934:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 935:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 936:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 937:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 938:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 939:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 940:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 941:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 942:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 943:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 944:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 945:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 946:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 947:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 948:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 949:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 950:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 950 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 951:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 952:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 953:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 954:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
  45              	 .loc 1 954 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e DA68     	 ldr r2,[r3,#12]
  48 0010 FB78     	 ldrb r3,[r7,#3]
  49 0012 0121     	 movs r1,#1
  50 0014 01FA03F3 	 lsl r3,r1,r3
  51 0018 1A43     	 orrs r2,r2,r3
  52 001a 7B68     	 ldr r3,[r7,#4]
  53 001c DA60     	 str r2,[r3,#12]
 955:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
  54              	 .loc 1 955 0
  55 001e 0C37     	 adds r7,r7,#12
  56              	.LCFI3:
  57              	 .cfi_def_cfa_offset 4
  58 0020 BD46     	 mov sp,r7
  59              	.LCFI4:
  60              	 .cfi_def_cfa_register 13
  61              	 
  62 0022 5DF8047B 	 ldr r7,[sp],#4
  63              	.LCFI5:
  64              	 .cfi_restore 7
  65              	 .cfi_def_cfa_offset 0
  66 0026 7047     	 bx lr
  67              	 .cfi_endproc
  68              	.LFE151:
  70              	 .section .text.XMC_CCU4_DisableClock,"ax",%progbits
  71              	 .align 2
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_CCU4_DisableClock:
  76              	.LFB152:
 956:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 957:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 958:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 959:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 960:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 961:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 962:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 963:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 964:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 965:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 966:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 967:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 968:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 969:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 970:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 971:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 972:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 973:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 974:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 975:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
  77              	 .loc 1 975 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 0B46     	 mov r3,r1
  94 000a FB70     	 strb r3,[r7,#3]
 976:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 977:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 978:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 979:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
  95              	 .loc 1 979 0
  96 000c 7B68     	 ldr r3,[r7,#4]
  97 000e 9A68     	 ldr r2,[r3,#8]
  98 0010 FB78     	 ldrb r3,[r7,#3]
  99 0012 0121     	 movs r1,#1
 100 0014 01FA03F3 	 lsl r3,r1,r3
 101 0018 1A43     	 orrs r2,r2,r3
 102 001a 7B68     	 ldr r3,[r7,#4]
 103 001c 9A60     	 str r2,[r3,#8]
 980:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 104              	 .loc 1 980 0
 105 001e 0C37     	 adds r7,r7,#12
 106              	.LCFI9:
 107              	 .cfi_def_cfa_offset 4
 108 0020 BD46     	 mov sp,r7
 109              	.LCFI10:
 110              	 .cfi_def_cfa_register 13
 111              	 
 112 0022 5DF8047B 	 ldr r7,[sp],#4
 113              	.LCFI11:
 114              	 .cfi_restore 7
 115              	 .cfi_def_cfa_offset 0
 116 0026 7047     	 bx lr
 117              	 .cfi_endproc
 118              	.LFE152:
 120              	 .section .text.XMC_CCU4_SLICE_IsTimerRunning,"ax",%progbits
 121              	 .align 2
 122              	 .thumb
 123              	 .thumb_func
 125              	XMC_CCU4_SLICE_IsTimerRunning:
 126              	.LFB156:
 981:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 982:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 983:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 985:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 986:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 987:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 988:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 990:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 991:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 992:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 993:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 994:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 995:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 996:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
 997:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 998:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 999:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1000:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1001:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1002:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1003:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1004:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1005:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1006:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1007:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1008:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1009:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1010:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1011:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1012:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1013:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1014:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1015:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1016:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1017:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1018:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1019:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1020:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1021:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1022:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1023:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1024:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1025:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1026:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1027:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1028:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1029:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1030:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1031:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1032:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1033:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1034:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1035:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1036:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1037:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1038:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1039:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1040:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1041:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1042:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1043:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1044:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1045:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1046:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1047:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1048:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1049:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1050:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1051:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1052:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1053:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1054:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1055:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1056:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1057:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1058:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1059:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1060:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1061:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1062:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1063:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1064:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1065:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1066:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1067:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1068:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1069:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1070:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1073:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1074:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1075:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1076:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1077:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1078:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1079:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1080:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1081:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1082:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1083:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1084:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1085:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1086:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1087:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1088:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1089:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1090:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1091:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1092:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1093:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1094:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1095:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1096:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1097:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1098:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1099:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1100:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1101:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1102:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1103:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1104:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1105:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1106:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1107:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1108:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1109:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1110:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1111:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1112:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1113:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1114:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1115:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1116:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1117:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1118:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1119:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1120:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1121:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1122:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1123:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1124:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1125:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1126:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1127:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1128:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1129:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1130:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1131:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1132:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1133:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1134:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1135:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1136:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1137:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1138:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1139:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1140:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1141:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1142:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1143:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1144:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1146:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1147:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1148:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1149:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1150:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1151:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1152:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1153:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1154:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1155:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1156:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1157:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1158:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1159:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1160:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1161:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1162:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1163:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1164:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1165:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1166:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1167:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1169:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1170:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1172:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1173:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1174:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1175:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1177:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1178:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1179:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1180:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1181:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1182:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1183:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1184:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1185:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1186:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1187:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1188:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1189:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1190:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1191:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1192:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1193:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1194:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1195:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1196:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1197:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1198:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1199:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1200:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1201:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1202:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1203:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1204:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1205:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #else
1206:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1207:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1208:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1209:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1210:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1211:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1212:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1213:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1214:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1215:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1216:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1217:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1218:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1219:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1220:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1221:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1222:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1223:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1224:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1225:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1226:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
1227:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1228:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1229:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1230:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1231:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1232:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1233:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1234:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1235:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1236:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1237:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1238:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1239:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1240:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1241:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1242:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1243:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1244:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1245:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1246:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1247:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1248:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1249:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1250:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1251:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1252:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1253:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1254:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1256:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1257:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1258:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1259:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1260:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1261:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1262:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1263:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1264:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1265:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1266:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1267:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1268:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1269:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1270:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1271:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1272:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1273:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1276:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1277:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1278:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1279:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1280:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1281:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1282:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1283:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1284:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1285:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1286:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1287:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1288:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1289:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1290:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1291:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1292:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1293:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1294:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1295:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1296:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1297:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1298:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1299:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1300:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1301:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1302:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1303:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1304:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1305:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1306:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1307:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1308:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1309:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1310:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1311:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1312:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1313:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1314:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1315:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1316:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1317:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1318:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1319:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1320:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1321:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1322:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1323:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1324:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1325:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1326:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1327:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1328:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1329:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1330:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1331:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1332:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1333:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1334:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1335:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1336:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1337:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1338:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1339:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1340:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1341:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1342:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1343:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1344:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1345:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1346:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1347:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1348:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1349:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1350:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1351:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1352:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1353:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1355:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1356:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1357:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1358:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1359:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1361:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1362:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1363:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1364:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1365:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1366:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1367:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1368:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1369:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1370:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1371:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1372:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1373:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1374:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1376:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1377:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1378:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1379:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1380:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1381:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1382:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1383:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1384:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1385:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1386:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1387:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1388:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1389:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1390:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1391:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1392:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1393:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1394:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1395:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1396:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1397:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1398:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1399:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1400:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1401:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 127              	 .loc 1 1401 0
 128              	 .cfi_startproc
 129              	 
 130              	 
 131              	 
 132 0000 80B4     	 push {r7}
 133              	.LCFI12:
 134              	 .cfi_def_cfa_offset 4
 135              	 .cfi_offset 7,-4
 136 0002 83B0     	 sub sp,sp,#12
 137              	.LCFI13:
 138              	 .cfi_def_cfa_offset 16
 139 0004 00AF     	 add r7,sp,#0
 140              	.LCFI14:
 141              	 .cfi_def_cfa_register 7
 142 0006 7860     	 str r0,[r7,#4]
1402:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1403:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
 143              	 .loc 1 1403 0
 144 0008 7B68     	 ldr r3,[r7,#4]
 145 000a 9B68     	 ldr r3,[r3,#8]
 146 000c 03F00103 	 and r3,r3,#1
 147 0010 002B     	 cmp r3,#0
 148 0012 14BF     	 ite ne
 149 0014 0123     	 movne r3,#1
 150 0016 0023     	 moveq r3,#0
 151 0018 DBB2     	 uxtb r3,r3
1404:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 152              	 .loc 1 1404 0
 153 001a 1846     	 mov r0,r3
 154 001c 0C37     	 adds r7,r7,#12
 155              	.LCFI15:
 156              	 .cfi_def_cfa_offset 4
 157 001e BD46     	 mov sp,r7
 158              	.LCFI16:
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 0020 5DF8047B 	 ldr r7,[sp],#4
 162              	.LCFI17:
 163              	 .cfi_restore 7
 164              	 .cfi_def_cfa_offset 0
 165 0024 7047     	 bx lr
 166              	 .cfi_endproc
 167              	.LFE156:
 169 0026 00BF     	 .section .text.XMC_CCU4_SLICE_StartTimer,"ax",%progbits
 170              	 .align 2
 171              	 .thumb
 172              	 .thumb_func
 174              	XMC_CCU4_SLICE_StartTimer:
 175              	.LFB158:
1405:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1406:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1407:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1408:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1409:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1410:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1411:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1412:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1413:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1414:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1415:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1416:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1417:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1418:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1419:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1420:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1421:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1422:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1423:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1424:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1425:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1426:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1427:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1428:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1429:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1430:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1431:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1432:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1433:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1434:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1435:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1436:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1437:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1438:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1439:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 176              	 .loc 1 1439 0
 177              	 .cfi_startproc
 178              	 
 179              	 
 180              	 
 181 0000 80B4     	 push {r7}
 182              	.LCFI18:
 183              	 .cfi_def_cfa_offset 4
 184              	 .cfi_offset 7,-4
 185 0002 83B0     	 sub sp,sp,#12
 186              	.LCFI19:
 187              	 .cfi_def_cfa_offset 16
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI20:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
1440:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1441:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
 192              	 .loc 1 1441 0
 193 0008 7B68     	 ldr r3,[r7,#4]
 194 000a 0122     	 movs r2,#1
 195 000c DA60     	 str r2,[r3,#12]
1442:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 196              	 .loc 1 1442 0
 197 000e 0C37     	 adds r7,r7,#12
 198              	.LCFI21:
 199              	 .cfi_def_cfa_offset 4
 200 0010 BD46     	 mov sp,r7
 201              	.LCFI22:
 202              	 .cfi_def_cfa_register 13
 203              	 
 204 0012 5DF8047B 	 ldr r7,[sp],#4
 205              	.LCFI23:
 206              	 .cfi_restore 7
 207              	 .cfi_def_cfa_offset 0
 208 0016 7047     	 bx lr
 209              	 .cfi_endproc
 210              	.LFE158:
 212              	 .section .text.XMC_CCU4_SLICE_StopTimer,"ax",%progbits
 213              	 .align 2
 214              	 .thumb
 215              	 .thumb_func
 217              	XMC_CCU4_SLICE_StopTimer:
 218              	.LFB159:
1443:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1444:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1445:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1446:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1447:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1448:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1449:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1450:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1451:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1452:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1453:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1454:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1455:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1456:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1457:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 219              	 .loc 1 1457 0
 220              	 .cfi_startproc
 221              	 
 222              	 
 223              	 
 224 0000 80B4     	 push {r7}
 225              	.LCFI24:
 226              	 .cfi_def_cfa_offset 4
 227              	 .cfi_offset 7,-4
 228 0002 83B0     	 sub sp,sp,#12
 229              	.LCFI25:
 230              	 .cfi_def_cfa_offset 16
 231 0004 00AF     	 add r7,sp,#0
 232              	.LCFI26:
 233              	 .cfi_def_cfa_register 7
 234 0006 7860     	 str r0,[r7,#4]
1458:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1459:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
 235              	 .loc 1 1459 0
 236 0008 7B68     	 ldr r3,[r7,#4]
 237 000a 0122     	 movs r2,#1
 238 000c 1A61     	 str r2,[r3,#16]
1460:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 239              	 .loc 1 1460 0
 240 000e 0C37     	 adds r7,r7,#12
 241              	.LCFI27:
 242              	 .cfi_def_cfa_offset 4
 243 0010 BD46     	 mov sp,r7
 244              	.LCFI28:
 245              	 .cfi_def_cfa_register 13
 246              	 
 247 0012 5DF8047B 	 ldr r7,[sp],#4
 248              	.LCFI29:
 249              	 .cfi_restore 7
 250              	 .cfi_def_cfa_offset 0
 251 0016 7047     	 bx lr
 252              	 .cfi_endproc
 253              	.LFE159:
 255              	 .section .text.XMC_CCU4_SLICE_ClearTimer,"ax",%progbits
 256              	 .align 2
 257              	 .thumb
 258              	 .thumb_func
 260              	XMC_CCU4_SLICE_ClearTimer:
 261              	.LFB160:
1461:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1462:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1463:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1464:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1465:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1466:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1467:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1468:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1469:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1470:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1471:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1472:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1473:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1474:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1475:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1476:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 262              	 .loc 1 1476 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266              	 
 267 0000 80B4     	 push {r7}
 268              	.LCFI30:
 269              	 .cfi_def_cfa_offset 4
 270              	 .cfi_offset 7,-4
 271 0002 83B0     	 sub sp,sp,#12
 272              	.LCFI31:
 273              	 .cfi_def_cfa_offset 16
 274 0004 00AF     	 add r7,sp,#0
 275              	.LCFI32:
 276              	 .cfi_def_cfa_register 7
 277 0006 7860     	 str r0,[r7,#4]
1477:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1478:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
 278              	 .loc 1 1478 0
 279 0008 7B68     	 ldr r3,[r7,#4]
 280 000a 0222     	 movs r2,#2
 281 000c 1A61     	 str r2,[r3,#16]
1479:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 282              	 .loc 1 1479 0
 283 000e 0C37     	 adds r7,r7,#12
 284              	.LCFI33:
 285              	 .cfi_def_cfa_offset 4
 286 0010 BD46     	 mov sp,r7
 287              	.LCFI34:
 288              	 .cfi_def_cfa_register 13
 289              	 
 290 0012 5DF8047B 	 ldr r7,[sp],#4
 291              	.LCFI35:
 292              	 .cfi_restore 7
 293              	 .cfi_def_cfa_offset 0
 294 0016 7047     	 bx lr
 295              	 .cfi_endproc
 296              	.LFE160:
 298              	 .section .text.XMC_CCU4_SLICE_SetTimerPeriodMatch,"ax",%progbits
 299              	 .align 2
 300              	 .thumb
 301              	 .thumb_func
 303              	XMC_CCU4_SLICE_SetTimerPeriodMatch:
 304              	.LFB165:
1480:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1481:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1482:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1483:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1484:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1485:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1486:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1487:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1488:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1489:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1490:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1491:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1492:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1493:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1494:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1495:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1496:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1497:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1498:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1499:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1500:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1501:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1502:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1503:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1504:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1505:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1506:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1507:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1508:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1509:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1510:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1511:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1512:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1513:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1514:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1515:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1516:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1517:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1518:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1519:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1520:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1521:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1522:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1523:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1524:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1525:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1526:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1527:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1528:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1529:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1530:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1531:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1532:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1533:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1534:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1535:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1536:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1537:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1538:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1539:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1540:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1541:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1542:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1543:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1544:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1545:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1546:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1547:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1548:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1549:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1550:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1551:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1552:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1553:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1554:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1555:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1556:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1557:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1558:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1559:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1560:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1561:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1562:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1563:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1564:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1565:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1566:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1567:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1568:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1569:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1570:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1571:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1572:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1573:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1574:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1575:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1576:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1577:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1578:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1579:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1580:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1581:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1582:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1583:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1584:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1585:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1586:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1587:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1588:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1589:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1590:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1591:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1592:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1593:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1594:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1596:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1597:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1598:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1599:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1600:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1601:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1602:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1603:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1604:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1605:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1606:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1607:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1608:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1609:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1610:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1611:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 305              	 .loc 1 1611 0
 306              	 .cfi_startproc
 307              	 
 308              	 
 309              	 
 310 0000 80B4     	 push {r7}
 311              	.LCFI36:
 312              	 .cfi_def_cfa_offset 4
 313              	 .cfi_offset 7,-4
 314 0002 83B0     	 sub sp,sp,#12
 315              	.LCFI37:
 316              	 .cfi_def_cfa_offset 16
 317 0004 00AF     	 add r7,sp,#0
 318              	.LCFI38:
 319              	 .cfi_def_cfa_register 7
 320 0006 7860     	 str r0,[r7,#4]
 321 0008 0B46     	 mov r3,r1
 322 000a 7B80     	 strh r3,[r7,#2]
1612:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1613:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
 323              	 .loc 1 1613 0
 324 000c 7A88     	 ldrh r2,[r7,#2]
 325 000e 7B68     	 ldr r3,[r7,#4]
 326 0010 5A63     	 str r2,[r3,#52]
1614:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 327              	 .loc 1 1614 0
 328 0012 0C37     	 adds r7,r7,#12
 329              	.LCFI39:
 330              	 .cfi_def_cfa_offset 4
 331 0014 BD46     	 mov sp,r7
 332              	.LCFI40:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 0016 5DF8047B 	 ldr r7,[sp],#4
 336              	.LCFI41:
 337              	 .cfi_restore 7
 338              	 .cfi_def_cfa_offset 0
 339 001a 7047     	 bx lr
 340              	 .cfi_endproc
 341              	.LFE165:
 343              	 .section .text.XMC_CCU4_SLICE_SetTimerCompareMatch,"ax",%progbits
 344              	 .align 2
 345              	 .thumb
 346              	 .thumb_func
 348              	XMC_CCU4_SLICE_SetTimerCompareMatch:
 349              	.LFB167:
1615:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1616:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1617:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1618:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1619:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1620:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1621:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1622:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1623:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1624:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1625:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1626:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1627:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1628:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1629:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1630:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1631:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1632:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1633:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1634:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1635:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1636:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1637:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1638:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1639:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1640:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1641:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1642:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1643:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1644:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1647:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1649:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1650:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1651:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1652:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1653:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1654:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1655:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1656:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1657:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1658:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1659:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 350              	 .loc 1 1659 0
 351              	 .cfi_startproc
 352              	 
 353              	 
 354              	 
 355 0000 80B4     	 push {r7}
 356              	.LCFI42:
 357              	 .cfi_def_cfa_offset 4
 358              	 .cfi_offset 7,-4
 359 0002 83B0     	 sub sp,sp,#12
 360              	.LCFI43:
 361              	 .cfi_def_cfa_offset 16
 362 0004 00AF     	 add r7,sp,#0
 363              	.LCFI44:
 364              	 .cfi_def_cfa_register 7
 365 0006 7860     	 str r0,[r7,#4]
 366 0008 0B46     	 mov r3,r1
 367 000a 7B80     	 strh r3,[r7,#2]
1660:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1661:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
 368              	 .loc 1 1661 0
 369 000c 7A88     	 ldrh r2,[r7,#2]
 370 000e 7B68     	 ldr r3,[r7,#4]
 371 0010 DA63     	 str r2,[r3,#60]
1662:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 372              	 .loc 1 1662 0
 373 0012 0C37     	 adds r7,r7,#12
 374              	.LCFI45:
 375              	 .cfi_def_cfa_offset 4
 376 0014 BD46     	 mov sp,r7
 377              	.LCFI46:
 378              	 .cfi_def_cfa_register 13
 379              	 
 380 0016 5DF8047B 	 ldr r7,[sp],#4
 381              	.LCFI47:
 382              	 .cfi_restore 7
 383              	 .cfi_def_cfa_offset 0
 384 001a 7047     	 bx lr
 385              	 .cfi_endproc
 386              	.LFE167:
 388              	 .section .text.XMC_CCU4_EnableShadowTransfer,"ax",%progbits
 389              	 .align 2
 390              	 .thumb
 391              	 .thumb_func
 393              	XMC_CCU4_EnableShadowTransfer:
 394              	.LFB169:
1663:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1664:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1665:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1666:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1667:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1668:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1669:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1670:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1671:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1672:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1673:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1674:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1675:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1676:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1677:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1678:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1679:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1680:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1681:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1682:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1683:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1684:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1685:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1686:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1687:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1688:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1689:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1690:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1691:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1692:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1693:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1694:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1695:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1696:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1697:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1698:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1700:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1701:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1702:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1703:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1704:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1705:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1706:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1707:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1708:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1709:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1710:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1711:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1712:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1713:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 395              	 .loc 1 1713 0
 396              	 .cfi_startproc
 397              	 
 398              	 
 399              	 
 400 0000 80B4     	 push {r7}
 401              	.LCFI48:
 402              	 .cfi_def_cfa_offset 4
 403              	 .cfi_offset 7,-4
 404 0002 83B0     	 sub sp,sp,#12
 405              	.LCFI49:
 406              	 .cfi_def_cfa_offset 16
 407 0004 00AF     	 add r7,sp,#0
 408              	.LCFI50:
 409              	 .cfi_def_cfa_register 7
 410 0006 7860     	 str r0,[r7,#4]
 411 0008 3960     	 str r1,[r7]
1714:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1715:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 412              	 .loc 1 1715 0
 413 000a 7B68     	 ldr r3,[r7,#4]
 414 000c 3A68     	 ldr r2,[r7]
 415 000e 1A61     	 str r2,[r3,#16]
1716:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 416              	 .loc 1 1716 0
 417 0010 0C37     	 adds r7,r7,#12
 418              	.LCFI51:
 419              	 .cfi_def_cfa_offset 4
 420 0012 BD46     	 mov sp,r7
 421              	.LCFI52:
 422              	 .cfi_def_cfa_register 13
 423              	 
 424 0014 5DF8047B 	 ldr r7,[sp],#4
 425              	.LCFI53:
 426              	 .cfi_restore 7
 427              	 .cfi_def_cfa_offset 0
 428 0018 7047     	 bx lr
 429              	 .cfi_endproc
 430              	.LFE169:
 432 001a 00BF     	 .section .text.XMC_CCU4_SLICE_EnableEvent,"ax",%progbits
 433              	 .align 2
 434              	 .thumb
 435              	 .thumb_func
 437              	XMC_CCU4_SLICE_EnableEvent:
 438              	.LFB179:
1717:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1718:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1719:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1720:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1721:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1722:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1723:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1724:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1725:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1726:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1727:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1728:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1729:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1730:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1731:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1732:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1733:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1734:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1735:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1736:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1737:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1738:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1739:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1740:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1741:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1742:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1743:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1744:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1745:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1746:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1747:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1748:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1749:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1750:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1751:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1752:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1753:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1754:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1755:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1756:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1757:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1758:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1759:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1760:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1761:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1762:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1763:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1764:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1765:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1766:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1767:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1768:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1769:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1770:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1771:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1772:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1773:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1774:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1775:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1776:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1777:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1778:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1779:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1780:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1781:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1782:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1783:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1784:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1785:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1786:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1787:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1788:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1789:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1790:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1791:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1792:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1793:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1794:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1795:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1796:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1797:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1798:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1799:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1800:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1801:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1802:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1803:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1804:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1805:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1806:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1807:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1808:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1809:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1810:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1811:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1812:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1813:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1814:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1815:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1816:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1817:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1818:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1819:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1820:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1821:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1822:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1823:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1824:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1825:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1826:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1827:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1828:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1829:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1830:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1831:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1832:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1833:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1834:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1835:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1836:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1837:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1838:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1839:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1840:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1841:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1842:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1843:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1844:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1845:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1846:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1847:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1848:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1849:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1850:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1851:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1852:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1853:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1854:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1855:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1856:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1857:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1858:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1859:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1860:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1861:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1862:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1863:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1864:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
1865:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1866:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1867:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1868:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t
1869:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1870:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1871:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1872:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1873:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1874:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.
1875:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
1876:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by calling XMC_CCU4_StopPrescaler().
1877:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1878:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1879:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue().
1880:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1881:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1882:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1883:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1884:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1885:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param cmp_val Prescaler divider compare value
1886:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1887:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1888:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1889:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1890:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1891:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.\n
1892:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
1893:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
1894:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
1895:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the value, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask.
1896:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1897:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1898:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1899:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1900:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU4_SLICE_t *const slice,
1901:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                      const uint8_t cmp_val)
1902:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1903:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU4_IsVa
1904:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   /*  write to the shadow register */
1905:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->FPCS = (uint32_t) cmp_val;
1906:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1907:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1908:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1909:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1910:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1911:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1912:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1913:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the multichannel mode, by setting CC4yTC.MCME bit.<BR>\n
1914:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
1915:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
1916:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
1917:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
1918:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
1919:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1920:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1921:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultiChannelMode()<BR> XMC_CCU4_SetMultiChannelShadowTransferMode().
1922:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1923:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1924:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1925:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(s
1926:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_MCME_Msk;
1927:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1928:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1929:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1930:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1931:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1932:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1933:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1934:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1935:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the multichannel mode, by clearing CC4yTC.MCME bit.<BR>\n
1936:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the slices to the normal operation mode.
1937:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1938:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1939:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableMultiChannelMode().
1940:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1941:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1942:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1943:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1944:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_MCME_Msk);
1945:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1946:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1947:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1948:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1949:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
1950:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Use ::XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
1951:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             using a bit wise OR operation.
1952:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1953:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1954:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1955:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1956:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
1957:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
1958:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS
1959:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1960:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1961:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1962:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** */
1963:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
1964:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1965:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1966:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1967:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
1968:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                Range: [0,3]
1969:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1970:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t  Returns the Capture register value.
1971:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *              Range: [0 to 0x1FFFFF]
1972:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1973:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1974:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[\b reg
1975:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
1976:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
1977:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
1978:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to find out if there is a new captured value present.
1979:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1980:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1981:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetLastCapturedTimerValue().
1982:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1983:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
1984:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1985:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1986:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1987:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set  The capture register set, which must be evaluated
1988:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
1989:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1990:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     ::XMC_CCU4_STATUS_t Returns XMC_CCU4_STATUS_OK if there was new value present in the capture
1991:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture
1992:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1993:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1994:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest captured timer value, by reading CC4yCV registers.\n\n
1995:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
1996:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 4 capt
1997:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * evaluated.\n
1998:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
1999:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * capture registers have been evaluated.
2000:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2001:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2002:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetCaptureRegisterValue().
2003:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2004:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
2005:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
2006:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            uint32_t *val_ptr);
2007:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2008:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2009:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2010:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2011:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2012:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2013:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2014:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2015:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.\n\
2016:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2017:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2018:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2019:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2020:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableMultipleEvents()<BR> XMC_CCU4_SLICE_
2021:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2022:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2023:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableEvent(XMC_CCU4_SLICE_t *const slice,
2024:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                 const XMC_CCU4_SLICE_IRQ_ID_t event)
2025:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 439              	 .loc 1 2025 0
 440              	 .cfi_startproc
 441              	 
 442              	 
 443              	 
 444 0000 80B4     	 push {r7}
 445              	.LCFI54:
 446              	 .cfi_def_cfa_offset 4
 447              	 .cfi_offset 7,-4
 448 0002 83B0     	 sub sp,sp,#12
 449              	.LCFI55:
 450              	 .cfi_def_cfa_offset 16
 451 0004 00AF     	 add r7,sp,#0
 452              	.LCFI56:
 453              	 .cfi_def_cfa_register 7
 454 0006 7860     	 str r0,[r7,#4]
 455 0008 0B46     	 mov r3,r1
 456 000a FB70     	 strb r3,[r7,#3]
2026:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2027:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2028:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 457              	 .loc 1 2028 0
 458 000c 7B68     	 ldr r3,[r7,#4]
 459 000e D3F8A420 	 ldr r2,[r3,#164]
 460 0012 FB78     	 ldrb r3,[r7,#3]
 461 0014 0121     	 movs r1,#1
 462 0016 01FA03F3 	 lsl r3,r1,r3
 463 001a 1A43     	 orrs r2,r2,r3
 464 001c 7B68     	 ldr r3,[r7,#4]
 465 001e C3F8A420 	 str r2,[r3,#164]
2029:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 466              	 .loc 1 2029 0
 467 0022 0C37     	 adds r7,r7,#12
 468              	.LCFI57:
 469              	 .cfi_def_cfa_offset 4
 470 0024 BD46     	 mov sp,r7
 471              	.LCFI58:
 472              	 .cfi_def_cfa_register 13
 473              	 
 474 0026 5DF8047B 	 ldr r7,[sp],#4
 475              	.LCFI59:
 476              	 .cfi_restore 7
 477              	 .cfi_def_cfa_offset 0
 478 002a 7047     	 bx lr
 479              	 .cfi_endproc
 480              	.LFE179:
 482              	 .section .text.XMC_CCU4_SLICE_ClearEvent,"ax",%progbits
 483              	 .align 2
 484              	 .thumb
 485              	 .thumb_func
 487              	XMC_CCU4_SLICE_ClearEvent:
 488              	.LFB184:
2030:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2031:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2032:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2033:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param intr_mask Event mask such that multiple events can be enabled.
2034:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Use ::XMC_CCU4_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2035:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  using a bit wise OR operation.
2036:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2037:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2038:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2039:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2040:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC4yINTE re
2041:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2042:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2043:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2044:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2045:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_DisableEv
2046:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2047:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2048:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint1
2049:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2050:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
2051:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= (uint32_t)intr_mask;
2052:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2053:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2054:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2055:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2056:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2057:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2058:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2059:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2060:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2061:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC4yINTE register.\n\n
2062:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Prevents the event from being asserted
2063:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2064:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2065:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2066:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2067:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2068:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableEvent(XMC_CCU4_SLICE_t *const slice,
2069:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                  const XMC_CCU4_SLICE_IRQ_ID_t event)
2070:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2071:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2072:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event))
2073:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2074:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2075:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2076:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2077:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2078:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mask Event mask such that multiple events can be enabled.
2079:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Use ::XMC_CCU4_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2080:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             using a bit wise OR operation.
2081:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2082:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2083:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2084:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2085:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC4yINTE reg
2086:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prevents selected events of the slice from being asserted.
2087:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2088:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2089:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2090:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableEvent().
2091:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2092:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint
2093:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2094:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
2095:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE &= ~((uint32_t) mask);
2096:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2097:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2098:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2099:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2100:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2101:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2102:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2103:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2104:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2105:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Manually asserts the requested event, by setting CC4ySWS register.\n\n
2106:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2107:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2108:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2109:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2110:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
2111:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2112:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IR
2113:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2114:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2115:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2116:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
2117:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
2118:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2119:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2120:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2121:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Asserted event which must be acknowledged.
2122:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2123:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2124:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2125:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2126:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Acknowledges an asserted event, by setting CC4ySWR with respective event flag.\n\n
2127:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2128:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2129:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent()<BR> XMC_CCU4_SLICE_GetEvent().
2130:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2131:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_
2132:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 489              	 .loc 1 2132 0
 490              	 .cfi_startproc
 491              	 
 492              	 
 493              	 
 494 0000 80B4     	 push {r7}
 495              	.LCFI60:
 496              	 .cfi_def_cfa_offset 4
 497              	 .cfi_offset 7,-4
 498 0002 83B0     	 sub sp,sp,#12
 499              	.LCFI61:
 500              	 .cfi_def_cfa_offset 16
 501 0004 00AF     	 add r7,sp,#0
 502              	.LCFI62:
 503              	 .cfi_def_cfa_register 7
 504 0006 7860     	 str r0,[r7,#4]
 505 0008 0B46     	 mov r3,r1
 506 000a FB70     	 strb r3,[r7,#3]
2133:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2134:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2135:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
 507              	 .loc 1 2135 0
 508 000c 7B68     	 ldr r3,[r7,#4]
 509 000e D3F8B020 	 ldr r2,[r3,#176]
 510 0012 FB78     	 ldrb r3,[r7,#3]
 511 0014 0121     	 movs r1,#1
 512 0016 01FA03F3 	 lsl r3,r1,r3
 513 001a 1A43     	 orrs r2,r2,r3
 514 001c 7B68     	 ldr r3,[r7,#4]
 515 001e C3F8B020 	 str r2,[r3,#176]
2136:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 516              	 .loc 1 2136 0
 517 0022 0C37     	 adds r7,r7,#12
 518              	.LCFI63:
 519              	 .cfi_def_cfa_offset 4
 520 0024 BD46     	 mov sp,r7
 521              	.LCFI64:
 522              	 .cfi_def_cfa_register 13
 523              	 
 524 0026 5DF8047B 	 ldr r7,[sp],#4
 525              	.LCFI65:
 526              	 .cfi_restore 7
 527              	 .cfi_def_cfa_offset 0
 528 002a 7047     	 bx lr
 529              	 .cfi_endproc
 530              	.LFE184:
 532              	 .section .text.XMC_CCU4_SLICE_GetEvent,"ax",%progbits
 533              	 .align 2
 534              	 .thumb
 535              	 .thumb_func
 537              	XMC_CCU4_SLICE_GetEvent:
 538              	.LFB185:
2137:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2138:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2139:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2140:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event to be evaluated for assertion
2141:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
2142:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *         bool  Returns true if event is set else false is returned.
2143:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2144:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2145:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Evaluates if a given event is asserted or not, by reading CC4yINTS register.\n\n
2146:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2147:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2148:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2149:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2150:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2151:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent().
2152:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2153:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_GetEvent(const XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SL
2154:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 539              	 .loc 1 2154 0
 540              	 .cfi_startproc
 541              	 
 542              	 
 543              	 
 544 0000 80B4     	 push {r7}
 545              	.LCFI66:
 546              	 .cfi_def_cfa_offset 4
 547              	 .cfi_offset 7,-4
 548 0002 83B0     	 sub sp,sp,#12
 549              	.LCFI67:
 550              	 .cfi_def_cfa_offset 16
 551 0004 00AF     	 add r7,sp,#0
 552              	.LCFI68:
 553              	 .cfi_def_cfa_register 7
 554 0006 7860     	 str r0,[r7,#4]
 555 0008 0B46     	 mov r3,r1
 556 000a FB70     	 strb r3,[r7,#3]
2155:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2156:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2157:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2158:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h ****   return(((uint32_t)(slice->INTS & ((uint32_t)1 << (uint32_t)event))) != 0U);
 557              	 .loc 1 2158 0
 558 000c 7B68     	 ldr r3,[r7,#4]
 559 000e D3F8A020 	 ldr r2,[r3,#160]
 560 0012 FB78     	 ldrb r3,[r7,#3]
 561 0014 22FA03F3 	 lsr r3,r2,r3
 562 0018 03F00103 	 and r3,r3,#1
 563 001c 002B     	 cmp r3,#0
 564 001e 14BF     	 ite ne
 565 0020 0123     	 movne r3,#1
 566 0022 0023     	 moveq r3,#0
 567 0024 DBB2     	 uxtb r3,r3
2159:C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 568              	 .loc 1 2159 0
 569 0026 1846     	 mov r0,r3
 570 0028 0C37     	 adds r7,r7,#12
 571              	.LCFI69:
 572              	 .cfi_def_cfa_offset 4
 573 002a BD46     	 mov sp,r7
 574              	.LCFI70:
 575              	 .cfi_def_cfa_register 13
 576              	 
 577 002c 5DF8047B 	 ldr r7,[sp],#4
 578              	.LCFI71:
 579              	 .cfi_restore 7
 580              	 .cfi_def_cfa_offset 0
 581 0030 7047     	 bx lr
 582              	 .cfi_endproc
 583              	.LFE185:
 585 0032 00BF     	 .section .text.PWM_lCCU4_Init,"ax",%progbits
 586              	 .align 2
 587              	 .global PWM_lCCU4_Init
 588              	 .thumb
 589              	 .thumb_func
 591              	PWM_lCCU4_Init:
 592              	.LFB222:
 593              	 .file 2 "../Dave/Generated/PWM/pwm.c"
   1:../Dave/Generated/PWM/pwm.c **** /**
   2:../Dave/Generated/PWM/pwm.c ****  * @file pwm.c
   3:../Dave/Generated/PWM/pwm.c ****  * @date 2016-07-28
   4:../Dave/Generated/PWM/pwm.c ****  *
   5:../Dave/Generated/PWM/pwm.c ****  * NOTE:
   6:../Dave/Generated/PWM/pwm.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM/pwm.c ****  *
   8:../Dave/Generated/PWM/pwm.c ****  * @cond
   9:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM/pwm.c ****  * PWM v4.1.10 - Generates a PWM using one timer slice of CCU4 or CCU8.
  11:../Dave/Generated/PWM/pwm.c ****  *
  12:../Dave/Generated/PWM/pwm.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  13:../Dave/Generated/PWM/pwm.c ****  * All rights reserved.
  14:../Dave/Generated/PWM/pwm.c ****  *
  15:../Dave/Generated/PWM/pwm.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/PWM/pwm.c ****  * following conditions are met:
  17:../Dave/Generated/PWM/pwm.c ****  *
  18:../Dave/Generated/PWM/pwm.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/PWM/pwm.c ****  *   disclaimer.
  20:../Dave/Generated/PWM/pwm.c ****  *
  21:../Dave/Generated/PWM/pwm.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/PWM/pwm.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/PWM/pwm.c ****  *
  24:../Dave/Generated/PWM/pwm.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/PWM/pwm.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/PWM/pwm.c ****  *
  27:../Dave/Generated/PWM/pwm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/PWM/pwm.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/PWM/pwm.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/PWM/pwm.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/PWM/pwm.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/PWM/pwm.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/PWM/pwm.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/PWM/pwm.c ****  *
  35:../Dave/Generated/PWM/pwm.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/PWM/pwm.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  38:../Dave/Generated/PWM/pwm.c ****  *
  39:../Dave/Generated/PWM/pwm.c ****  * Change History
  40:../Dave/Generated/PWM/pwm.c ****  * --------------
  41:../Dave/Generated/PWM/pwm.c ****  *
  42:../Dave/Generated/PWM/pwm.c ****  * 2015-02-16:
  43:../Dave/Generated/PWM/pwm.c ****  *     - Initial version for DAVEv4.<BR>
  44:../Dave/Generated/PWM/pwm.c ****  *
  45:../Dave/Generated/PWM/pwm.c ****  * 2015-04-06:
  46:../Dave/Generated/PWM/pwm.c ****  *     - Configuration structure modified of PWM_t.<BR>
  47:../Dave/Generated/PWM/pwm.c ****  *     - Removed PWM_Dynamic_t,PWM_ConfigType_t.<BR>
  48:../Dave/Generated/PWM/pwm.c ****  *     - Added New macros for Mixed usage.<BR>
  49:../Dave/Generated/PWM/pwm.c ****  *     - Added New API PWM_SetPeriodMatchValue().<BR>
  50:../Dave/Generated/PWM/pwm.c ****  *     - Modified enumeration PWM_InterruptType_t to PWM_INTERRUPT_t.<BR>
  51:../Dave/Generated/PWM/pwm.c ****  *     - Modified enumeration PWM_OutputPassiveLevelType_t to PWM_OUTPUT_PASSIVE_LEVEL_t.<BR>
  52:../Dave/Generated/PWM/pwm.c ****  *     - Modified enumeration PWM_TIMER_TYPE_t to PWM_TIMER_SLICE_t .<BR>
  53:../Dave/Generated/PWM/pwm.c ****  *     - PWM_ClearEvent(), PWM_GetInterruptStatus() and PWM_SetPassiveLevel() API prototype modifie
  54:../Dave/Generated/PWM/pwm.c ****  *       new enum.<BR>
  55:../Dave/Generated/PWM/pwm.c ****  *     - API name change PWM_AcknowledgeInterrupt to PWM_ClearEvent.<BR>
  56:../Dave/Generated/PWM/pwm.c ****  *
  57:../Dave/Generated/PWM/pwm.c ****  * 2015-07-09:
  58:../Dave/Generated/PWM/pwm.c ****  *     - Documentation updated.<BR>
  59:../Dave/Generated/PWM/pwm.c ****  *
  60:../Dave/Generated/PWM/pwm.c ****  * 2015-09-01:
  61:../Dave/Generated/PWM/pwm.c ****  *     - XMC14 device support added..<BR>
  62:../Dave/Generated/PWM/pwm.c ****  *
  63:../Dave/Generated/PWM/pwm.c ****  * 2015-10-08:
  64:../Dave/Generated/PWM/pwm.c ****  *     - Added support for XMC4700/XMC4800 devices.<BR>
  65:../Dave/Generated/PWM/pwm.c ****  *
  66:../Dave/Generated/PWM/pwm.c ****  * 2015-12-16:
  67:../Dave/Generated/PWM/pwm.c ****  *     - Added support for XMC4300 devices.<BR>
  68:../Dave/Generated/PWM/pwm.c ****  *
  69:../Dave/Generated/PWM/pwm.c ****  * 2016-07-28:
  70:../Dave/Generated/PWM/pwm.c ****  *     - All event signals are made mandatory.<BR>
  71:../Dave/Generated/PWM/pwm.c ****  *
  72:../Dave/Generated/PWM/pwm.c ****  * @endcond
  73:../Dave/Generated/PWM/pwm.c ****  *
  74:../Dave/Generated/PWM/pwm.c ****  */
  75:../Dave/Generated/PWM/pwm.c **** 
  76:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
  77:../Dave/Generated/PWM/pwm.c ****  * HEADER FILES
  78:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  79:../Dave/Generated/PWM/pwm.c **** #include "pwm.h"
  80:../Dave/Generated/PWM/pwm.c **** 
  81:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
  82:../Dave/Generated/PWM/pwm.c ****  * MACROS
  83:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  84:../Dave/Generated/PWM/pwm.c **** #define PWM_MAX_DUTY_CYCLE ((uint32_t)10000)
  85:../Dave/Generated/PWM/pwm.c **** #define PWM_DUTY_CYCLE_SCALE ((uint32_t)100)
  86:../Dave/Generated/PWM/pwm.c **** #define PWM_MAX_PRESCALER ((uint32_t)15)
  87:../Dave/Generated/PWM/pwm.c **** #define PWM_MAX_PERIOD_VALUE ((uint32_t) 65535)
  88:../Dave/Generated/PWM/pwm.c **** 
  89:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
  90:../Dave/Generated/PWM/pwm.c ****  * LOCAL ROUTINES
  91:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
  92:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
  93:../Dave/Generated/PWM/pwm.c **** /*Initialize the App and XMC_CCU4 slice. */
  94:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_Init(PWM_t *const handle_ptr);
  95:../Dave/Generated/PWM/pwm.c **** 
  96:../Dave/Generated/PWM/pwm.c **** /*Initialize interrupts*/
  97:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_ConfigInterrupts(PWM_t *const handle_ptr);
  98:../Dave/Generated/PWM/pwm.c **** 
  99:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU4 slice. */
 100:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Start(PWM_t *const handle_ptr);
 101:../Dave/Generated/PWM/pwm.c **** 
 102:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU4 slice. */
 103:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Stop(PWM_t *const handle_ptr);
 104:../Dave/Generated/PWM/pwm.c **** 
 105:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU4 slice. */
 106:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle);
 107:../Dave/Generated/PWM/pwm.c **** 
 108:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU4 slice. */
 109:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz);
 110:../Dave/Generated/PWM/pwm.c **** 
 111:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU4 slice. */
 112:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 113:../Dave/Generated/PWM/pwm.c **** #endif
 114:../Dave/Generated/PWM/pwm.c **** 
 115:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 116:../Dave/Generated/PWM/pwm.c **** /*Initialize the App and XMC_CCU8 slice. */
 117:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_Init(PWM_t *const handle_ptr);
 118:../Dave/Generated/PWM/pwm.c **** 
 119:../Dave/Generated/PWM/pwm.c **** /*Initialize interrupts*/
 120:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_ConfigInterrupts(PWM_t *const handle_ptr);
 121:../Dave/Generated/PWM/pwm.c **** 
 122:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU8 slice. */
 123:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Start(PWM_t *const handle_ptr);
 124:../Dave/Generated/PWM/pwm.c **** 
 125:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU8 slice. */
 126:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Stop(PWM_t *const handle_ptr);
 127:../Dave/Generated/PWM/pwm.c **** 
 128:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU8 slice. */
 129:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle);
 130:../Dave/Generated/PWM/pwm.c **** 
 131:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU8 slice. */
 132:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz);
 133:../Dave/Generated/PWM/pwm.c **** 
 134:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU8 slice. */
 135:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 136:../Dave/Generated/PWM/pwm.c **** #endif
 137:../Dave/Generated/PWM/pwm.c **** 
 138:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 139:../Dave/Generated/PWM/pwm.c **** 
 140:../Dave/Generated/PWM/pwm.c **** /*Initialize the APP and CCU4 slice. */
 141:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_Init(PWM_t *const handle_ptr)
 142:../Dave/Generated/PWM/pwm.c **** {
 594              	 .loc 2 142 0
 595              	 .cfi_startproc
 596              	 
 597              	 
 598 0000 80B5     	 push {r7,lr}
 599              	.LCFI72:
 600              	 .cfi_def_cfa_offset 8
 601              	 .cfi_offset 7,-8
 602              	 .cfi_offset 14,-4
 603 0002 84B0     	 sub sp,sp,#16
 604              	.LCFI73:
 605              	 .cfi_def_cfa_offset 24
 606 0004 00AF     	 add r7,sp,#0
 607              	.LCFI74:
 608              	 .cfi_def_cfa_register 7
 609 0006 7860     	 str r0,[r7,#4]
 143:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status = PWM_STATUS_FAILURE;
 610              	 .loc 2 143 0
 611 0008 0123     	 movs r3,#1
 612 000a FB73     	 strb r3,[r7,#15]
 144:../Dave/Generated/PWM/pwm.c **** 
 145:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_Init:Invalid handle_ptr" , (handle_ptr != NULL))
 146:../Dave/Generated/PWM/pwm.c **** 
 147:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED == handle_ptr->state)
 613              	 .loc 2 147 0
 614 000c 7B68     	 ldr r3,[r7,#4]
 615 000e 93F82930 	 ldrb r3,[r3,#41]
 616 0012 022B     	 cmp r3,#2
 617 0014 4DD1     	 bne .L16
 148:../Dave/Generated/PWM/pwm.c ****   {
 149:../Dave/Generated/PWM/pwm.c ****     /* Initialize consumed Apps */
 150:../Dave/Generated/PWM/pwm.c ****     status = (PWM_STATUS_t)GLOBAL_CCU4_Init(handle_ptr->global_ccu4_handle);
 618              	 .loc 2 150 0
 619 0016 7B68     	 ldr r3,[r7,#4]
 620 0018 1B68     	 ldr r3,[r3]
 621 001a 1846     	 mov r0,r3
 622 001c FFF7FEFF 	 bl GLOBAL_CCU4_Init
 623 0020 0346     	 mov r3,r0
 624 0022 FB73     	 strb r3,[r7,#15]
 151:../Dave/Generated/PWM/pwm.c **** 
 152:../Dave/Generated/PWM/pwm.c ****     /*Initialize CCU4 slice */
 153:../Dave/Generated/PWM/pwm.c ****     if (PWM_STATUS_SUCCESS == status)/*check GLOBAL_CCU4_Init status*/
 625              	 .loc 2 153 0
 626 0024 FB7B     	 ldrb r3,[r7,#15]
 627 0026 002B     	 cmp r3,#0
 628 0028 3FD1     	 bne .L17
 154:../Dave/Generated/PWM/pwm.c ****     {
 155:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_Init:Initilizing Slice")
 156:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_CompareInit(handle_ptr->ccu4_slice_ptr, handle_ptr->ccu4_slice_config_ptr);
 629              	 .loc 2 156 0
 630 002a 7B68     	 ldr r3,[r7,#4]
 631 002c 9A68     	 ldr r2,[r3,#8]
 632 002e 7B68     	 ldr r3,[r7,#4]
 633 0030 DB68     	 ldr r3,[r3,#12]
 634 0032 1046     	 mov r0,r2
 635 0034 1946     	 mov r1,r3
 636 0036 FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
 157:../Dave/Generated/PWM/pwm.c **** 
 158:../Dave/Generated/PWM/pwm.c ****       /* Set the period and compare register values */
 159:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr,
 637              	 .loc 2 159 0
 638 003a 7B68     	 ldr r3,[r7,#4]
 639 003c 9A68     	 ldr r2,[r3,#8]
 160:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)handle_ptr->period_value);
 640              	 .loc 2 160 0
 641 003e 7B68     	 ldr r3,[r7,#4]
 642 0040 DB69     	 ldr r3,[r3,#28]
 159:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)handle_ptr->period_value);
 643              	 .loc 2 159 0
 644 0042 9BB2     	 uxth r3,r3
 645 0044 1046     	 mov r0,r2
 646 0046 1946     	 mov r1,r3
 647 0048 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 161:../Dave/Generated/PWM/pwm.c **** 
 162:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr,
 648              	 .loc 2 162 0
 649 004c 7B68     	 ldr r3,[r7,#4]
 650 004e 9A68     	 ldr r2,[r3,#8]
 163:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 651              	 .loc 2 163 0
 652 0050 7B68     	 ldr r3,[r7,#4]
 653 0052 9B69     	 ldr r3,[r3,#24]
 162:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 654              	 .loc 2 162 0
 655 0054 9BB2     	 uxth r3,r3
 656 0056 1046     	 mov r0,r2
 657 0058 1946     	 mov r1,r3
 658 005a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 164:../Dave/Generated/PWM/pwm.c **** 
 165:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 659              	 .loc 2 165 0
 660 005e 7B68     	 ldr r3,[r7,#4]
 661 0060 5A68     	 ldr r2,[r3,#4]
 662 0062 7B68     	 ldr r3,[r7,#4]
 663 0064 5B6A     	 ldr r3,[r3,#36]
 664 0066 1046     	 mov r0,r2
 665 0068 1946     	 mov r1,r3
 666 006a FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 166:../Dave/Generated/PWM/pwm.c **** 
 167:../Dave/Generated/PWM/pwm.c ****       /* Initialize interrupts */
 168:../Dave/Generated/PWM/pwm.c ****       PWM_lCCU4_ConfigInterrupts(handle_ptr);
 667              	 .loc 2 168 0
 668 006e 7868     	 ldr r0,[r7,#4]
 669 0070 FFF7FEFF 	 bl PWM_lCCU4_ConfigInterrupts
 169:../Dave/Generated/PWM/pwm.c **** 
 170:../Dave/Generated/PWM/pwm.c ****       XMC_GPIO_Init(handle_ptr->gpio_out_port,handle_ptr->gpio_out_pin,
 670              	 .loc 2 170 0
 671 0074 7B68     	 ldr r3,[r7,#4]
 672 0076 1969     	 ldr r1,[r3,#16]
 673 0078 7B68     	 ldr r3,[r7,#4]
 674 007a 93F82C20 	 ldrb r2,[r3,#44]
 675 007e 7B68     	 ldr r3,[r7,#4]
 676 0080 5B69     	 ldr r3,[r3,#20]
 677 0082 0846     	 mov r0,r1
 678 0084 1146     	 mov r1,r2
 679 0086 1A46     	 mov r2,r3
 680 0088 FFF7FEFF 	 bl XMC_GPIO_Init
 171:../Dave/Generated/PWM/pwm.c ****     		        handle_ptr->gpio_out_config);
 172:../Dave/Generated/PWM/pwm.c **** 
 173:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_SUCCESS;
 681              	 .loc 2 173 0
 682 008c 7B68     	 ldr r3,[r7,#4]
 683 008e 0022     	 movs r2,#0
 684 0090 83F82920 	 strb r2,[r3,#41]
 174:../Dave/Generated/PWM/pwm.c **** 
 175:../Dave/Generated/PWM/pwm.c ****       /* Start the PWM generation if start at initialization is enabled */
 176:../Dave/Generated/PWM/pwm.c ****       if ((bool) true == handle_ptr->start_control)
 685              	 .loc 2 176 0
 686 0094 7B68     	 ldr r3,[r7,#4]
 687 0096 93F82F30 	 ldrb r3,[r3,#47]
 688 009a 002B     	 cmp r3,#0
 689 009c 02D0     	 beq .L18
 177:../Dave/Generated/PWM/pwm.c ****       {
 178:../Dave/Generated/PWM/pwm.c ****         PWM_Start(handle_ptr);
 690              	 .loc 2 178 0
 691 009e 7868     	 ldr r0,[r7,#4]
 692 00a0 FFF7FEFF 	 bl PWM_Start
 693              	.L18:
 179:../Dave/Generated/PWM/pwm.c ****       }
 180:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 694              	 .loc 2 180 0
 695 00a4 0023     	 movs r3,#0
 696 00a6 FB73     	 strb r3,[r7,#15]
 697 00a8 03E0     	 b .L16
 698              	.L17:
 181:../Dave/Generated/PWM/pwm.c ****     }
 182:../Dave/Generated/PWM/pwm.c ****     else
 183:../Dave/Generated/PWM/pwm.c ****     {
 184:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_UNINITIALIZED;
 699              	 .loc 2 184 0
 700 00aa 7B68     	 ldr r3,[r7,#4]
 701 00ac 0222     	 movs r2,#2
 702 00ae 83F82920 	 strb r2,[r3,#41]
 703              	.L16:
 185:../Dave/Generated/PWM/pwm.c ****     }
 186:../Dave/Generated/PWM/pwm.c **** 
 187:../Dave/Generated/PWM/pwm.c ****   }
 188:../Dave/Generated/PWM/pwm.c ****   return (status);
 704              	 .loc 2 188 0
 705 00b2 FB7B     	 ldrb r3,[r7,#15]
 189:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_Init() api */
 706              	 .loc 2 189 0
 707 00b4 1846     	 mov r0,r3
 708 00b6 1037     	 adds r7,r7,#16
 709              	.LCFI75:
 710              	 .cfi_def_cfa_offset 8
 711 00b8 BD46     	 mov sp,r7
 712              	.LCFI76:
 713              	 .cfi_def_cfa_register 13
 714              	 
 715 00ba 80BD     	 pop {r7,pc}
 716              	 .cfi_endproc
 717              	.LFE222:
 719              	 .section .text.PWM_lCCU4_ConfigInterrupts,"ax",%progbits
 720              	 .align 2
 721              	 .global PWM_lCCU4_ConfigInterrupts
 722              	 .thumb
 723              	 .thumb_func
 725              	PWM_lCCU4_ConfigInterrupts:
 726              	.LFB223:
 190:../Dave/Generated/PWM/pwm.c **** 
 191:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 192:../Dave/Generated/PWM/pwm.c **** /* Initialize interrupts */
 193:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_ConfigInterrupts(PWM_t *const handle_ptr)
 194:../Dave/Generated/PWM/pwm.c **** {
 727              	 .loc 2 194 0
 728              	 .cfi_startproc
 729              	 
 730              	 
 731 0000 80B5     	 push {r7,lr}
 732              	.LCFI77:
 733              	 .cfi_def_cfa_offset 8
 734              	 .cfi_offset 7,-8
 735              	 .cfi_offset 14,-4
 736 0002 82B0     	 sub sp,sp,#8
 737              	.LCFI78:
 738              	 .cfi_def_cfa_offset 16
 739 0004 00AF     	 add r7,sp,#0
 740              	.LCFI79:
 741              	 .cfi_def_cfa_register 7
 742 0006 7860     	 str r0,[r7,#4]
 195:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->period_match_enable)
 743              	 .loc 2 195 0
 744 0008 7B68     	 ldr r3,[r7,#4]
 745 000a 93F83030 	 ldrb r3,[r3,#48]
 746 000e 002B     	 cmp r3,#0
 747 0010 0FD0     	 beq .L21
 196:../Dave/Generated/PWM/pwm.c ****   {
 197:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_ConfigInterrupts:period match enable")
 198:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH);
 748              	 .loc 2 198 0
 749 0012 7B68     	 ldr r3,[r7,#4]
 750 0014 9B68     	 ldr r3,[r3,#8]
 751 0016 1846     	 mov r0,r3
 752 0018 0021     	 movs r1,#0
 753 001a FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 199:../Dave/Generated/PWM/pwm.c **** 
 200:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node to period match event*/
 201:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH,
 754              	 .loc 2 201 0
 755 001e 7B68     	 ldr r3,[r7,#4]
 756 0020 9A68     	 ldr r2,[r3,#8]
 757 0022 7B68     	 ldr r3,[r7,#4]
 758 0024 93F82A30 	 ldrb r3,[r3,#42]
 759 0028 1046     	 mov r0,r2
 760 002a 0021     	 movs r1,#0
 761 002c 1A46     	 mov r2,r3
 762 002e FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 763              	.L21:
 202:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu4_slice_period_match_node);
 203:../Dave/Generated/PWM/pwm.c ****   }
 204:../Dave/Generated/PWM/pwm.c **** 
 205:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->compare_match_enable)
 764              	 .loc 2 205 0
 765 0032 7B68     	 ldr r3,[r7,#4]
 766 0034 93F83130 	 ldrb r3,[r3,#49]
 767 0038 002B     	 cmp r3,#0
 768 003a 0FD0     	 beq .L20
 206:../Dave/Generated/PWM/pwm.c ****   {
 207:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_ConfigInterrupts:compare match enable")
 208:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP);
 769              	 .loc 2 208 0
 770 003c 7B68     	 ldr r3,[r7,#4]
 771 003e 9B68     	 ldr r3,[r3,#8]
 772 0040 1846     	 mov r0,r3
 773 0042 0221     	 movs r1,#2
 774 0044 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 209:../Dave/Generated/PWM/pwm.c **** 
 210:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node to compare match event */
 211:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH
 775              	 .loc 2 211 0
 776 0048 7B68     	 ldr r3,[r7,#4]
 777 004a 9A68     	 ldr r2,[r3,#8]
 778 004c 7B68     	 ldr r3,[r7,#4]
 779 004e 93F82B30 	 ldrb r3,[r3,#43]
 780 0052 1046     	 mov r0,r2
 781 0054 0221     	 movs r1,#2
 782 0056 1A46     	 mov r2,r3
 783 0058 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 784              	.L20:
 212:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu4_slice_compare_match_node);
 213:../Dave/Generated/PWM/pwm.c ****   }
 214:../Dave/Generated/PWM/pwm.c **** }
 785              	 .loc 2 214 0
 786 005c 0837     	 adds r7,r7,#8
 787              	.LCFI80:
 788              	 .cfi_def_cfa_offset 8
 789 005e BD46     	 mov sp,r7
 790              	.LCFI81:
 791              	 .cfi_def_cfa_register 13
 792              	 
 793 0060 80BD     	 pop {r7,pc}
 794              	 .cfi_endproc
 795              	.LFE223:
 797 0062 00BF     	 .section .text.PWM_lCCU4_Start,"ax",%progbits
 798              	 .align 2
 799              	 .global PWM_lCCU4_Start
 800              	 .thumb
 801              	 .thumb_func
 803              	PWM_lCCU4_Start:
 804              	.LFB224:
 215:../Dave/Generated/PWM/pwm.c **** 
 216:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 217:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU4 slice. */
 218:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Start(PWM_t *const handle_ptr)
 219:../Dave/Generated/PWM/pwm.c **** {
 805              	 .loc 2 219 0
 806              	 .cfi_startproc
 807              	 
 808              	 
 809 0000 80B5     	 push {r7,lr}
 810              	.LCFI82:
 811              	 .cfi_def_cfa_offset 8
 812              	 .cfi_offset 7,-8
 813              	 .cfi_offset 14,-4
 814 0002 82B0     	 sub sp,sp,#8
 815              	.LCFI83:
 816              	 .cfi_def_cfa_offset 16
 817 0004 00AF     	 add r7,sp,#0
 818              	.LCFI84:
 819              	 .cfi_def_cfa_register 7
 820 0006 7860     	 str r0,[r7,#4]
 220:../Dave/Generated/PWM/pwm.c ****   if ((PWM_STATUS_SUCCESS == handle_ptr->state) || (PWM_STATUS_STOPPED == handle_ptr->state))
 821              	 .loc 2 220 0
 822 0008 7B68     	 ldr r3,[r7,#4]
 823 000a 93F82930 	 ldrb r3,[r3,#41]
 824 000e 002B     	 cmp r3,#0
 825 0010 04D0     	 beq .L24
 826              	 .loc 2 220 0 is_stmt 0 discriminator 1
 827 0012 7B68     	 ldr r3,[r7,#4]
 828 0014 93F82930 	 ldrb r3,[r3,#41]
 829 0018 042B     	 cmp r3,#4
 830 001a 11D1     	 bne .L23
 831              	.L24:
 221:../Dave/Generated/PWM/pwm.c ****   {
 222:../Dave/Generated/PWM/pwm.c ****     /* Clears the IDLE mode for the slice */
 223:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_EnableClock(handle_ptr->ccu4_kernel_ptr,handle_ptr->slice_number);
 832              	 .loc 2 223 0 is_stmt 1
 833 001c 7B68     	 ldr r3,[r7,#4]
 834 001e 5A68     	 ldr r2,[r3,#4]
 835 0020 7B68     	 ldr r3,[r7,#4]
 836 0022 93F82E30 	 ldrb r3,[r3,#46]
 837 0026 1046     	 mov r0,r2
 838 0028 1946     	 mov r1,r3
 839 002a FFF7FEFF 	 bl XMC_CCU4_EnableClock
 224:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_StartTimer(handle_ptr->ccu4_slice_ptr);
 840              	 .loc 2 224 0
 841 002e 7B68     	 ldr r3,[r7,#4]
 842 0030 9B68     	 ldr r3,[r3,#8]
 843 0032 1846     	 mov r0,r3
 844 0034 FFF7FEFF 	 bl XMC_CCU4_SLICE_StartTimer
 225:../Dave/Generated/PWM/pwm.c **** 
 226:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_RUNNING;
 845              	 .loc 2 226 0
 846 0038 7B68     	 ldr r3,[r7,#4]
 847 003a 0322     	 movs r2,#3
 848 003c 83F82920 	 strb r2,[r3,#41]
 849              	.L23:
 227:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_Start:start PWM")
 228:../Dave/Generated/PWM/pwm.c ****   }
 229:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_Start() api */
 850              	 .loc 2 229 0
 851 0040 0837     	 adds r7,r7,#8
 852              	.LCFI85:
 853              	 .cfi_def_cfa_offset 8
 854 0042 BD46     	 mov sp,r7
 855              	.LCFI86:
 856              	 .cfi_def_cfa_register 13
 857              	 
 858 0044 80BD     	 pop {r7,pc}
 859              	 .cfi_endproc
 860              	.LFE224:
 862 0046 00BF     	 .section .text.PWM_lCCU4_Stop,"ax",%progbits
 863              	 .align 2
 864              	 .global PWM_lCCU4_Stop
 865              	 .thumb
 866              	 .thumb_func
 868              	PWM_lCCU4_Stop:
 869              	.LFB225:
 230:../Dave/Generated/PWM/pwm.c **** 
 231:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 232:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU4 slice. */
 233:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU4_Stop(PWM_t *const handle_ptr)
 234:../Dave/Generated/PWM/pwm.c **** {
 870              	 .loc 2 234 0
 871              	 .cfi_startproc
 872              	 
 873              	 
 874 0000 80B5     	 push {r7,lr}
 875              	.LCFI87:
 876              	 .cfi_def_cfa_offset 8
 877              	 .cfi_offset 7,-8
 878              	 .cfi_offset 14,-4
 879 0002 82B0     	 sub sp,sp,#8
 880              	.LCFI88:
 881              	 .cfi_def_cfa_offset 16
 882 0004 00AF     	 add r7,sp,#0
 883              	.LCFI89:
 884              	 .cfi_def_cfa_register 7
 885 0006 7860     	 str r0,[r7,#4]
 235:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED != handle_ptr->state)
 886              	 .loc 2 235 0
 887 0008 7B68     	 ldr r3,[r7,#4]
 888 000a 93F82930 	 ldrb r3,[r3,#41]
 889 000e 022B     	 cmp r3,#2
 890 0010 16D0     	 beq .L26
 236:../Dave/Generated/PWM/pwm.c ****   {
 237:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_StopTimer(handle_ptr->ccu4_slice_ptr);
 891              	 .loc 2 237 0
 892 0012 7B68     	 ldr r3,[r7,#4]
 893 0014 9B68     	 ldr r3,[r3,#8]
 894 0016 1846     	 mov r0,r3
 895 0018 FFF7FEFF 	 bl XMC_CCU4_SLICE_StopTimer
 238:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_ClearTimer(handle_ptr->ccu4_slice_ptr);
 896              	 .loc 2 238 0
 897 001c 7B68     	 ldr r3,[r7,#4]
 898 001e 9B68     	 ldr r3,[r3,#8]
 899 0020 1846     	 mov r0,r3
 900 0022 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearTimer
 239:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_DisableClock(handle_ptr->ccu4_kernel_ptr,handle_ptr->slice_number);
 901              	 .loc 2 239 0
 902 0026 7B68     	 ldr r3,[r7,#4]
 903 0028 5A68     	 ldr r2,[r3,#4]
 904 002a 7B68     	 ldr r3,[r7,#4]
 905 002c 93F82E30 	 ldrb r3,[r3,#46]
 906 0030 1046     	 mov r0,r2
 907 0032 1946     	 mov r1,r3
 908 0034 FFF7FEFF 	 bl XMC_CCU4_DisableClock
 240:../Dave/Generated/PWM/pwm.c **** 
 241:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_STOPPED;
 909              	 .loc 2 241 0
 910 0038 7B68     	 ldr r3,[r7,#4]
 911 003a 0422     	 movs r2,#4
 912 003c 83F82920 	 strb r2,[r3,#41]
 913              	.L26:
 242:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_Stop:stop PWM")
 243:../Dave/Generated/PWM/pwm.c ****   }
 244:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_Stop() api */
 914              	 .loc 2 244 0
 915 0040 0837     	 adds r7,r7,#8
 916              	.LCFI90:
 917              	 .cfi_def_cfa_offset 8
 918 0042 BD46     	 mov sp,r7
 919              	.LCFI91:
 920              	 .cfi_def_cfa_register 13
 921              	 
 922 0044 80BD     	 pop {r7,pc}
 923              	 .cfi_endproc
 924              	.LFE225:
 926 0046 00BF     	 .section .text.PWM_lCCU4_SetDutyCycle,"ax",%progbits
 927              	 .align 2
 928              	 .global PWM_lCCU4_SetDutyCycle
 929              	 .thumb
 930              	 .thumb_func
 932              	PWM_lCCU4_SetDutyCycle:
 933              	.LFB226:
 245:../Dave/Generated/PWM/pwm.c **** 
 246:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 247:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU4 slice. */
 248:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle)
 249:../Dave/Generated/PWM/pwm.c **** {
 934              	 .loc 2 249 0
 935              	 .cfi_startproc
 936              	 
 937              	 
 938 0000 80B5     	 push {r7,lr}
 939              	.LCFI92:
 940              	 .cfi_def_cfa_offset 8
 941              	 .cfi_offset 7,-8
 942              	 .cfi_offset 14,-4
 943 0002 86B0     	 sub sp,sp,#24
 944              	.LCFI93:
 945              	 .cfi_def_cfa_offset 32
 946 0004 00AF     	 add r7,sp,#0
 947              	.LCFI94:
 948              	 .cfi_def_cfa_register 7
 949 0006 7860     	 str r0,[r7,#4]
 950 0008 3960     	 str r1,[r7]
 250:../Dave/Generated/PWM/pwm.c ****   uint32_t period;
 251:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 252:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 253:../Dave/Generated/PWM/pwm.c **** 
 254:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetDutyCycle:Invalid duty_cycle " , ((duty_cycle >= 0) && (duty_cycle <= PW
 255:../Dave/Generated/PWM/pwm.c **** 
 256:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 951              	 .loc 2 256 0
 952 000a 0123     	 movs r3,#1
 953 000c FB75     	 strb r3,[r7,#23]
 257:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED != handle_ptr->state)
 954              	 .loc 2 257 0
 955 000e 7B68     	 ldr r3,[r7,#4]
 956 0010 93F82930 	 ldrb r3,[r3,#41]
 957 0014 022B     	 cmp r3,#2
 958 0016 2CD0     	 beq .L29
 258:../Dave/Generated/PWM/pwm.c ****   {
 259:../Dave/Generated/PWM/pwm.c ****     /* Duty cycle needs between 0 and 10000 */
 260:../Dave/Generated/PWM/pwm.c ****     if (duty_cycle <= PWM_MAX_DUTY_CYCLE)
 959              	 .loc 2 260 0
 960 0018 3B68     	 ldr r3,[r7]
 961 001a 42F21072 	 movw r2,#10000
 962 001e 9342     	 cmp r3,r2
 963 0020 27D8     	 bhi .L29
 261:../Dave/Generated/PWM/pwm.c ****     {
 262:../Dave/Generated/PWM/pwm.c ****       /* period = (PR + 1) */
 263:../Dave/Generated/PWM/pwm.c ****       period = (uint32_t)handle_ptr->period_value + 1U;
 964              	 .loc 2 263 0
 965 0022 7B68     	 ldr r3,[r7,#4]
 966 0024 DB69     	 ldr r3,[r3,#28]
 967 0026 0133     	 adds r3,r3,#1
 968 0028 3B61     	 str r3,[r7,#16]
 264:../Dave/Generated/PWM/pwm.c **** 
 265:../Dave/Generated/PWM/pwm.c ****       /* Duty Cycle(symmetric) = (PR-CR1)+1 / period */
 266:../Dave/Generated/PWM/pwm.c ****       compare = ((period * (PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PWM_DUTY_CYCLE_SC
 969              	 .loc 2 266 0
 970 002a 3B68     	 ldr r3,[r7]
 971 002c C3F51C53 	 rsb r3,r3,#9984
 972 0030 1033     	 adds r3,r3,#16
 973 0032 3A69     	 ldr r2,[r7,#16]
 974 0034 02FB03F3 	 mul r3,r2,r3
 975 0038 104A     	 ldr r2,.L31
 976 003a A2FB0323 	 umull r2,r3,r2,r3
 977 003e 5B0B     	 lsrs r3,r3,#13
 978 0040 FB60     	 str r3,[r7,#12]
 267:../Dave/Generated/PWM/pwm.c **** 
 268:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 979              	 .loc 2 268 0
 980 0042 7B68     	 ldr r3,[r7,#4]
 981 0044 FA68     	 ldr r2,[r7,#12]
 982 0046 9A61     	 str r2,[r3,#24]
 269:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 983              	 .loc 2 269 0
 984 0048 7B68     	 ldr r3,[r7,#4]
 985 004a 3A68     	 ldr r2,[r7]
 986 004c 1A62     	 str r2,[r3,#32]
 270:../Dave/Generated/PWM/pwm.c **** 
 271:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare);
 987              	 .loc 2 271 0
 988 004e 7B68     	 ldr r3,[r7,#4]
 989 0050 9A68     	 ldr r2,[r3,#8]
 990 0052 FB68     	 ldr r3,[r7,#12]
 991 0054 9BB2     	 uxth r3,r3
 992 0056 1046     	 mov r0,r2
 993 0058 1946     	 mov r1,r3
 994 005a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 272:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 995              	 .loc 2 272 0
 996 005e 7B68     	 ldr r3,[r7,#4]
 997 0060 5A68     	 ldr r2,[r3,#4]
 998 0062 7B68     	 ldr r3,[r7,#4]
 999 0064 5B6A     	 ldr r3,[r3,#36]
 1000 0066 1046     	 mov r0,r2
 1001 0068 1946     	 mov r1,r3
 1002 006a FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 273:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 1003              	 .loc 2 273 0
 1004 006e 0023     	 movs r3,#0
 1005 0070 FB75     	 strb r3,[r7,#23]
 1006              	.L29:
 274:../Dave/Generated/PWM/pwm.c ****     }
 275:../Dave/Generated/PWM/pwm.c ****   }
 276:../Dave/Generated/PWM/pwm.c **** 
 277:../Dave/Generated/PWM/pwm.c ****   XMC_DEBUG("PWM_lCCU4_SetDutyCycle:dutycycle set")
 278:../Dave/Generated/PWM/pwm.c ****   return (status);
 1007              	 .loc 2 278 0
 1008 0072 FB7D     	 ldrb r3,[r7,#23]
 279:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_SetDutyCycle() api */
 1009              	 .loc 2 279 0
 1010 0074 1846     	 mov r0,r3
 1011 0076 1837     	 adds r7,r7,#24
 1012              	.LCFI95:
 1013              	 .cfi_def_cfa_offset 8
 1014 0078 BD46     	 mov sp,r7
 1015              	.LCFI96:
 1016              	 .cfi_def_cfa_register 13
 1017              	 
 1018 007a 80BD     	 pop {r7,pc}
 1019              	.L32:
 1020              	 .align 2
 1021              	.L31:
 1022 007c 5917B7D1 	 .word -776530087
 1023              	 .cfi_endproc
 1024              	.LFE226:
 1026              	 .section .text.PWM_lCCU4_SetFreq,"ax",%progbits
 1027              	 .align 2
 1028              	 .global PWM_lCCU4_SetFreq
 1029              	 .thumb
 1030              	 .thumb_func
 1032              	PWM_lCCU4_SetFreq:
 1033              	.LFB227:
 280:../Dave/Generated/PWM/pwm.c **** 
 281:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 282:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU4 slice. */
 283:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz)
 284:../Dave/Generated/PWM/pwm.c **** {
 1034              	 .loc 2 284 0
 1035              	 .cfi_startproc
 1036              	 
 1037              	 
 1038 0000 80B5     	 push {r7,lr}
 1039              	.LCFI97:
 1040              	 .cfi_def_cfa_offset 8
 1041              	 .cfi_offset 7,-8
 1042              	 .cfi_offset 14,-4
 1043 0002 86B0     	 sub sp,sp,#24
 1044              	.LCFI98:
 1045              	 .cfi_def_cfa_offset 32
 1046 0004 00AF     	 add r7,sp,#0
 1047              	.LCFI99:
 1048              	 .cfi_def_cfa_register 7
 1049 0006 7860     	 str r0,[r7,#4]
 1050 0008 3960     	 str r1,[r7]
 285:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 286:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 287:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 288:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 289:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 290:../Dave/Generated/PWM/pwm.c **** 
 291:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetFreq:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 292:../Dave/Generated/PWM/pwm.c **** 
 293:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 1051              	 .loc 2 293 0
 1052 000a 7B68     	 ldr r3,[r7,#4]
 1053 000c 93F82930 	 ldrb r3,[r3,#41]
 1054 0010 FB75     	 strb r3,[r7,#23]
 294:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 1055              	 .loc 2 294 0
 1056 0012 0023     	 movs r3,#0
 1057 0014 BB75     	 strb r3,[r7,#22]
 295:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 1058              	 .loc 2 295 0
 1059 0016 0023     	 movs r3,#0
 1060 0018 3B61     	 str r3,[r7,#16]
 296:../Dave/Generated/PWM/pwm.c **** 
 297:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 298:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 1061              	 .loc 2 298 0
 1062 001a FB7D     	 ldrb r3,[r7,#23]
 1063 001c 022B     	 cmp r3,#2
 1064 001e 5BD0     	 beq .L34
 1065              	 .loc 2 298 0 is_stmt 0 discriminator 1
 1066 0020 3B68     	 ldr r3,[r7]
 1067 0022 002B     	 cmp r3,#0
 1068 0024 58D0     	 beq .L34
 299:../Dave/Generated/PWM/pwm.c ****   {
 300:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 1069              	 .loc 2 300 0 is_stmt 1
 1070 0026 0023     	 movs r3,#0
 1071 0028 FB75     	 strb r3,[r7,#23]
 301:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 302:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu4_handle->module_frequency;
 1072              	 .loc 2 302 0
 1073 002a 7B68     	 ldr r3,[r7,#4]
 1074 002c 1B68     	 ldr r3,[r3]
 1075 002e 1B68     	 ldr r3,[r3]
 1076 0030 FB60     	 str r3,[r7,#12]
 303:../Dave/Generated/PWM/pwm.c **** 
 304:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 305:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 1077              	 .loc 2 305 0
 1078 0032 0FE0     	 b .L35
 1079              	.L38:
 306:../Dave/Generated/PWM/pwm.c ****     {
 307:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 1080              	 .loc 2 307 0
 1081 0034 FA68     	 ldr r2,[r7,#12]
 1082 0036 3B68     	 ldr r3,[r7]
 1083 0038 B2FBF3F2 	 udiv r2,r2,r3
 1084 003c BB7D     	 ldrb r3,[r7,#22]
 1085 003e 22FA03F3 	 lsr r3,r2,r3
 1086 0042 3B61     	 str r3,[r7,#16]
 308:../Dave/Generated/PWM/pwm.c ****       /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 309:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT )
 1087              	 .loc 2 309 0
 1088 0044 3B69     	 ldr r3,[r7,#16]
 1089 0046 B3F5803F 	 cmp r3,#65536
 1090 004a 00D2     	 bcs .L36
 310:../Dave/Generated/PWM/pwm.c ****       {
 311:../Dave/Generated/PWM/pwm.c ****         break;
 1091              	 .loc 2 311 0
 1092 004c 05E0     	 b .L37
 1093              	.L36:
 312:../Dave/Generated/PWM/pwm.c ****       }
 313:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 1094              	 .loc 2 313 0
 1095 004e BB7D     	 ldrb r3,[r7,#22]
 1096 0050 0133     	 adds r3,r3,#1
 1097 0052 BB75     	 strb r3,[r7,#22]
 1098              	.L35:
 305:../Dave/Generated/PWM/pwm.c ****     {
 1099              	 .loc 2 305 0
 1100 0054 BB7D     	 ldrb r3,[r7,#22]
 1101 0056 0F2B     	 cmp r3,#15
 1102 0058 ECD9     	 bls .L38
 1103              	.L37:
 314:../Dave/Generated/PWM/pwm.c ****     }
 315:../Dave/Generated/PWM/pwm.c **** 
 316:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 317:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || ((uint32_t)0 == period_value))
 1104              	 .loc 2 317 0
 1105 005a BB7D     	 ldrb r3,[r7,#22]
 1106 005c 0F2B     	 cmp r3,#15
 1107 005e 02D8     	 bhi .L39
 1108              	 .loc 2 317 0 is_stmt 0 discriminator 1
 1109 0060 3B69     	 ldr r3,[r7,#16]
 1110 0062 002B     	 cmp r3,#0
 1111 0064 02D1     	 bne .L40
 1112              	.L39:
 318:../Dave/Generated/PWM/pwm.c ****     {
 319:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreq:Frequency could not be set")
 320:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 1113              	 .loc 2 320 0 is_stmt 1
 1114 0066 0123     	 movs r3,#1
 1115 0068 FB75     	 strb r3,[r7,#23]
 317:../Dave/Generated/PWM/pwm.c ****     {
 1116              	 .loc 2 317 0
 1117 006a 37E0     	 b .L42
 1118              	.L40:
 321:../Dave/Generated/PWM/pwm.c ****     }
 322:../Dave/Generated/PWM/pwm.c ****     else
 323:../Dave/Generated/PWM/pwm.c ****     {
 324:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values */
 325:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * (PWM_MAX_DUTY_CYCLE - handle_ptr->duty_cycle))
 1119              	 .loc 2 325 0
 1120 006c 7B68     	 ldr r3,[r7,#4]
 1121 006e 1B6A     	 ldr r3,[r3,#32]
 1122 0070 C3F51C53 	 rsb r3,r3,#9984
 1123 0074 1033     	 adds r3,r3,#16
 1124 0076 3A69     	 ldr r2,[r7,#16]
 1125 0078 02FB03F3 	 mul r3,r2,r3
 1126 007c 1A4A     	 ldr r2,.L44
 1127 007e A2FB0323 	 umull r2,r3,r2,r3
 1128 0082 5B0B     	 lsrs r3,r3,#13
 1129 0084 BB60     	 str r3,[r7,#8]
 326:../Dave/Generated/PWM/pwm.c ****     		     / ((uint32_t) 100 * PWM_DUTY_CYCLE_SCALE);
 327:../Dave/Generated/PWM/pwm.c **** 
 328:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetPrescaler(handle_ptr->ccu4_slice_ptr, prescaler);
 1130              	 .loc 2 328 0
 1131 0086 7B68     	 ldr r3,[r7,#4]
 1132 0088 9A68     	 ldr r2,[r3,#8]
 1133 008a BB7D     	 ldrb r3,[r7,#22]
 1134 008c 1046     	 mov r0,r2
 1135 008e 1946     	 mov r1,r3
 1136 0090 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPrescaler
 329:../Dave/Generated/PWM/pwm.c **** 
 330:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 331:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 1137              	 .loc 2 331 0
 1138 0094 3B69     	 ldr r3,[r7,#16]
 1139 0096 013B     	 subs r3,r3,#1
 1140 0098 3B61     	 str r3,[r7,#16]
 332:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)(period_value));
 1141              	 .loc 2 332 0
 1142 009a 7B68     	 ldr r3,[r7,#4]
 1143 009c 9A68     	 ldr r2,[r3,#8]
 1144 009e 3B69     	 ldr r3,[r7,#16]
 1145 00a0 9BB2     	 uxth r3,r3
 1146 00a2 1046     	 mov r0,r2
 1147 00a4 1946     	 mov r1,r3
 1148 00a6 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 333:../Dave/Generated/PWM/pwm.c **** 
 334:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare);
 1149              	 .loc 2 334 0
 1150 00aa 7B68     	 ldr r3,[r7,#4]
 1151 00ac 9A68     	 ldr r2,[r3,#8]
 1152 00ae BB68     	 ldr r3,[r7,#8]
 1153 00b0 9BB2     	 uxth r3,r3
 1154 00b2 1046     	 mov r0,r2
 1155 00b4 1946     	 mov r1,r3
 1156 00b6 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 335:../Dave/Generated/PWM/pwm.c **** 
 336:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1157              	 .loc 2 336 0
 1158 00ba 7B68     	 ldr r3,[r7,#4]
 1159 00bc 5A68     	 ldr r2,[r3,#4]
 1160 00be 7B68     	 ldr r3,[r7,#4]
 1161 00c0 5B6A     	 ldr r3,[r3,#36]
 1162 00c2 1046     	 mov r0,r2
 1163 00c4 1946     	 mov r1,r3
 1164 00c6 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 337:../Dave/Generated/PWM/pwm.c **** 
 338:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 1165              	 .loc 2 338 0
 1166 00ca 7B68     	 ldr r3,[r7,#4]
 1167 00cc BA68     	 ldr r2,[r7,#8]
 1168 00ce 9A61     	 str r2,[r3,#24]
 339:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 1169              	 .loc 2 339 0
 1170 00d0 7B68     	 ldr r3,[r7,#4]
 1171 00d2 3A69     	 ldr r2,[r7,#16]
 1172 00d4 DA61     	 str r2,[r3,#28]
 317:../Dave/Generated/PWM/pwm.c ****     {
 1173              	 .loc 2 317 0
 1174 00d6 01E0     	 b .L42
 1175              	.L34:
 340:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreq:frequency set")
 341:../Dave/Generated/PWM/pwm.c ****     }
 342:../Dave/Generated/PWM/pwm.c ****   }
 343:../Dave/Generated/PWM/pwm.c ****   else
 344:../Dave/Generated/PWM/pwm.c ****   {
 345:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 1176              	 .loc 2 345 0
 1177 00d8 0123     	 movs r3,#1
 1178 00da FB75     	 strb r3,[r7,#23]
 1179              	.L42:
 346:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_SetFreq:Frequency could not be set")
 347:../Dave/Generated/PWM/pwm.c ****   }
 348:../Dave/Generated/PWM/pwm.c **** 
 349:../Dave/Generated/PWM/pwm.c **** 
 350:../Dave/Generated/PWM/pwm.c ****   return status;
 1180              	 .loc 2 350 0
 1181 00dc FB7D     	 ldrb r3,[r7,#23]
 351:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_SetFreq() api */
 1182              	 .loc 2 351 0
 1183 00de 1846     	 mov r0,r3
 1184 00e0 1837     	 adds r7,r7,#24
 1185              	.LCFI100:
 1186              	 .cfi_def_cfa_offset 8
 1187 00e2 BD46     	 mov sp,r7
 1188              	.LCFI101:
 1189              	 .cfi_def_cfa_register 13
 1190              	 
 1191 00e4 80BD     	 pop {r7,pc}
 1192              	.L45:
 1193 00e6 00BF     	 .align 2
 1194              	.L44:
 1195 00e8 5917B7D1 	 .word -776530087
 1196              	 .cfi_endproc
 1197              	.LFE227:
 1199              	 .section .text.PWM_lCCU4_SetFreqAndDutyCycle,"ax",%progbits
 1200              	 .align 2
 1201              	 .global PWM_lCCU4_SetFreqAndDutyCycle
 1202              	 .thumb
 1203              	 .thumb_func
 1205              	PWM_lCCU4_SetFreqAndDutyCycle:
 1206              	.LFB228:
 352:../Dave/Generated/PWM/pwm.c **** 
 353:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 354:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU4 slice. */
 355:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU4_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 356:../Dave/Generated/PWM/pwm.c **** {
 1207              	 .loc 2 356 0
 1208              	 .cfi_startproc
 1209              	 
 1210              	 
 1211 0000 80B5     	 push {r7,lr}
 1212              	.LCFI102:
 1213              	 .cfi_def_cfa_offset 8
 1214              	 .cfi_offset 7,-8
 1215              	 .cfi_offset 14,-4
 1216 0002 88B0     	 sub sp,sp,#32
 1217              	.LCFI103:
 1218              	 .cfi_def_cfa_offset 40
 1219 0004 00AF     	 add r7,sp,#0
 1220              	.LCFI104:
 1221              	 .cfi_def_cfa_register 7
 1222 0006 F860     	 str r0,[r7,#12]
 1223 0008 B960     	 str r1,[r7,#8]
 1224 000a 7A60     	 str r2,[r7,#4]
 357:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 358:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 359:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 360:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 361:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 362:../Dave/Generated/PWM/pwm.c **** 
 363:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetFreqAndDutyCycle:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 364:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU4_SetFreqAndDutyCycle:Invalid duty_cycle",((duty_cycle >= 0) &&
 365:../Dave/Generated/PWM/pwm.c ****                                                                (duty_cycle <= PWM_MAX_DUTY_CYCLE)))
 366:../Dave/Generated/PWM/pwm.c **** 
 367:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 1225              	 .loc 2 367 0
 1226 000c FB68     	 ldr r3,[r7,#12]
 1227 000e 93F82930 	 ldrb r3,[r3,#41]
 1228 0012 FB77     	 strb r3,[r7,#31]
 368:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 1229              	 .loc 2 368 0
 1230 0014 0023     	 movs r3,#0
 1231 0016 BB77     	 strb r3,[r7,#30]
 369:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 1232              	 .loc 2 369 0
 1233 0018 0023     	 movs r3,#0
 1234 001a BB61     	 str r3,[r7,#24]
 370:../Dave/Generated/PWM/pwm.c **** 
 371:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 372:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 1235              	 .loc 2 372 0
 1236 001c FB7F     	 ldrb r3,[r7,#31]
 1237 001e 022B     	 cmp r3,#2
 1238 0020 62D0     	 beq .L47
 1239              	 .loc 2 372 0 is_stmt 0 discriminator 1
 1240 0022 BB68     	 ldr r3,[r7,#8]
 1241 0024 002B     	 cmp r3,#0
 1242 0026 5FD0     	 beq .L47
 373:../Dave/Generated/PWM/pwm.c ****   {
 374:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 1243              	 .loc 2 374 0 is_stmt 1
 1244 0028 0023     	 movs r3,#0
 1245 002a FB77     	 strb r3,[r7,#31]
 375:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 376:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu4_handle->module_frequency;
 1246              	 .loc 2 376 0
 1247 002c FB68     	 ldr r3,[r7,#12]
 1248 002e 1B68     	 ldr r3,[r3]
 1249 0030 1B68     	 ldr r3,[r3]
 1250 0032 7B61     	 str r3,[r7,#20]
 377:../Dave/Generated/PWM/pwm.c **** 
 378:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 379:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 1251              	 .loc 2 379 0
 1252 0034 0FE0     	 b .L48
 1253              	.L51:
 380:../Dave/Generated/PWM/pwm.c ****     {
 381:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 1254              	 .loc 2 381 0
 1255 0036 7A69     	 ldr r2,[r7,#20]
 1256 0038 BB68     	 ldr r3,[r7,#8]
 1257 003a B2FBF3F2 	 udiv r2,r2,r3
 1258 003e BB7F     	 ldrb r3,[r7,#30]
 1259 0040 22FA03F3 	 lsr r3,r2,r3
 1260 0044 BB61     	 str r3,[r7,#24]
 382:../Dave/Generated/PWM/pwm.c ****       /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 383:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT )
 1261              	 .loc 2 383 0
 1262 0046 BB69     	 ldr r3,[r7,#24]
 1263 0048 B3F5803F 	 cmp r3,#65536
 1264 004c 00D2     	 bcs .L49
 384:../Dave/Generated/PWM/pwm.c ****       {
 385:../Dave/Generated/PWM/pwm.c ****         break;
 1265              	 .loc 2 385 0
 1266 004e 05E0     	 b .L50
 1267              	.L49:
 386:../Dave/Generated/PWM/pwm.c ****       }
 387:../Dave/Generated/PWM/pwm.c **** 
 388:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 1268              	 .loc 2 388 0
 1269 0050 BB7F     	 ldrb r3,[r7,#30]
 1270 0052 0133     	 adds r3,r3,#1
 1271 0054 BB77     	 strb r3,[r7,#30]
 1272              	.L48:
 379:../Dave/Generated/PWM/pwm.c ****     {
 1273              	 .loc 2 379 0
 1274 0056 BB7F     	 ldrb r3,[r7,#30]
 1275 0058 0F2B     	 cmp r3,#15
 1276 005a ECD9     	 bls .L51
 1277              	.L50:
 389:../Dave/Generated/PWM/pwm.c ****     }
 390:../Dave/Generated/PWM/pwm.c **** 
 391:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 392:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || (duty_cycle > PWM_MAX_DUTY_CYCLE) || ((uint32_t)0 == per
 1278              	 .loc 2 392 0
 1279 005c BB7F     	 ldrb r3,[r7,#30]
 1280 005e 0F2B     	 cmp r3,#15
 1281 0060 07D8     	 bhi .L52
 1282              	 .loc 2 392 0 is_stmt 0 discriminator 1
 1283 0062 7B68     	 ldr r3,[r7,#4]
 1284 0064 42F21072 	 movw r2,#10000
 1285 0068 9342     	 cmp r3,r2
 1286 006a 02D8     	 bhi .L52
 1287              	 .loc 2 392 0 discriminator 2
 1288 006c BB69     	 ldr r3,[r7,#24]
 1289 006e 002B     	 cmp r3,#0
 1290 0070 02D1     	 bne .L53
 1291              	.L52:
 393:../Dave/Generated/PWM/pwm.c ****     {
 394:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreqAndDutyCycle:Frequency or duty cycle could not be set")
 395:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 1292              	 .loc 2 395 0 is_stmt 1
 1293 0072 0123     	 movs r3,#1
 1294 0074 FB77     	 strb r3,[r7,#31]
 392:../Dave/Generated/PWM/pwm.c ****     {
 1295              	 .loc 2 392 0
 1296 0076 39E0     	 b .L55
 1297              	.L53:
 396:../Dave/Generated/PWM/pwm.c ****     }
 397:../Dave/Generated/PWM/pwm.c ****     else
 398:../Dave/Generated/PWM/pwm.c ****     {
 399:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values */
 400:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * ((uint32_t)PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PW
 1298              	 .loc 2 400 0
 1299 0078 7B68     	 ldr r3,[r7,#4]
 1300 007a C3F51C53 	 rsb r3,r3,#9984
 1301 007e 1033     	 adds r3,r3,#16
 1302 0080 BA69     	 ldr r2,[r7,#24]
 1303 0082 02FB03F3 	 mul r3,r2,r3
 1304 0086 1C4A     	 ldr r2,.L57
 1305 0088 A2FB0323 	 umull r2,r3,r2,r3
 1306 008c 5B0B     	 lsrs r3,r3,#13
 1307 008e 3B61     	 str r3,[r7,#16]
 401:../Dave/Generated/PWM/pwm.c **** 
 402:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetPrescaler(handle_ptr->ccu4_slice_ptr, prescaler);
 1308              	 .loc 2 402 0
 1309 0090 FB68     	 ldr r3,[r7,#12]
 1310 0092 9A68     	 ldr r2,[r3,#8]
 1311 0094 BB7F     	 ldrb r3,[r7,#30]
 1312 0096 1046     	 mov r0,r2
 1313 0098 1946     	 mov r1,r3
 1314 009a FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPrescaler
 403:../Dave/Generated/PWM/pwm.c **** 
 404:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 405:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 1315              	 .loc 2 405 0
 1316 009e BB69     	 ldr r3,[r7,#24]
 1317 00a0 013B     	 subs r3,r3,#1
 1318 00a2 BB61     	 str r3,[r7,#24]
 406:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)(period_value));
 1319              	 .loc 2 406 0
 1320 00a4 FB68     	 ldr r3,[r7,#12]
 1321 00a6 9A68     	 ldr r2,[r3,#8]
 1322 00a8 BB69     	 ldr r3,[r7,#24]
 1323 00aa 9BB2     	 uxth r3,r3
 1324 00ac 1046     	 mov r0,r2
 1325 00ae 1946     	 mov r1,r3
 1326 00b0 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 407:../Dave/Generated/PWM/pwm.c **** 
 408:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare);
 1327              	 .loc 2 408 0
 1328 00b4 FB68     	 ldr r3,[r7,#12]
 1329 00b6 9A68     	 ldr r2,[r3,#8]
 1330 00b8 3B69     	 ldr r3,[r7,#16]
 1331 00ba 9BB2     	 uxth r3,r3
 1332 00bc 1046     	 mov r0,r2
 1333 00be 1946     	 mov r1,r3
 1334 00c0 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 409:../Dave/Generated/PWM/pwm.c **** 
 410:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1335              	 .loc 2 410 0
 1336 00c4 FB68     	 ldr r3,[r7,#12]
 1337 00c6 5A68     	 ldr r2,[r3,#4]
 1338 00c8 FB68     	 ldr r3,[r7,#12]
 1339 00ca 5B6A     	 ldr r3,[r3,#36]
 1340 00cc 1046     	 mov r0,r2
 1341 00ce 1946     	 mov r1,r3
 1342 00d0 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 411:../Dave/Generated/PWM/pwm.c **** 
 412:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 1343              	 .loc 2 412 0
 1344 00d4 FB68     	 ldr r3,[r7,#12]
 1345 00d6 3A69     	 ldr r2,[r7,#16]
 1346 00d8 9A61     	 str r2,[r3,#24]
 413:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 1347              	 .loc 2 413 0
 1348 00da FB68     	 ldr r3,[r7,#12]
 1349 00dc BA69     	 ldr r2,[r7,#24]
 1350 00de DA61     	 str r2,[r3,#28]
 414:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 1351              	 .loc 2 414 0
 1352 00e0 FB68     	 ldr r3,[r7,#12]
 1353 00e2 7A68     	 ldr r2,[r7,#4]
 1354 00e4 1A62     	 str r2,[r3,#32]
 392:../Dave/Generated/PWM/pwm.c ****     {
 1355              	 .loc 2 392 0
 1356 00e6 01E0     	 b .L55
 1357              	.L47:
 415:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU4_SetFreqAndDutyCycle:frequency and duty cycle set")
 416:../Dave/Generated/PWM/pwm.c ****     }
 417:../Dave/Generated/PWM/pwm.c ****   }
 418:../Dave/Generated/PWM/pwm.c ****   else
 419:../Dave/Generated/PWM/pwm.c ****   {
 420:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 1358              	 .loc 2 420 0
 1359 00e8 0123     	 movs r3,#1
 1360 00ea FB77     	 strb r3,[r7,#31]
 1361              	.L55:
 421:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU4_SetFreqAndDutyCycle:Frequency or duty cycle could not be set")
 422:../Dave/Generated/PWM/pwm.c ****   }
 423:../Dave/Generated/PWM/pwm.c **** 
 424:../Dave/Generated/PWM/pwm.c **** 
 425:../Dave/Generated/PWM/pwm.c ****   return status;
 1362              	 .loc 2 425 0
 1363 00ec FB7F     	 ldrb r3,[r7,#31]
 426:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU4_SetFreqAndDutyCycle() api */
 1364              	 .loc 2 426 0
 1365 00ee 1846     	 mov r0,r3
 1366 00f0 2037     	 adds r7,r7,#32
 1367              	.LCFI105:
 1368              	 .cfi_def_cfa_offset 8
 1369 00f2 BD46     	 mov sp,r7
 1370              	.LCFI106:
 1371              	 .cfi_def_cfa_register 13
 1372              	 
 1373 00f4 80BD     	 pop {r7,pc}
 1374              	.L58:
 1375 00f6 00BF     	 .align 2
 1376              	.L57:
 1377 00f8 5917B7D1 	 .word -776530087
 1378              	 .cfi_endproc
 1379              	.LFE228:
 1381              	 .section .text.PWM_GetAppVersion,"ax",%progbits
 1382              	 .align 2
 1383              	 .global PWM_GetAppVersion
 1384              	 .thumb
 1385              	 .thumb_func
 1387              	PWM_GetAppVersion:
 1388              	.LFB229:
 427:../Dave/Generated/PWM/pwm.c **** 
 428:../Dave/Generated/PWM/pwm.c **** #endif /* end of CCU4 function definitions */
 429:../Dave/Generated/PWM/pwm.c **** 
 430:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 431:../Dave/Generated/PWM/pwm.c **** 
 432:../Dave/Generated/PWM/pwm.c **** /*Initialize the APP and CCU8 slice. */
 433:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_Init(PWM_t *const handle_ptr)
 434:../Dave/Generated/PWM/pwm.c **** {
 435:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status = PWM_STATUS_FAILURE;
 436:../Dave/Generated/PWM/pwm.c **** 
 437:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED == handle_ptr->state)
 438:../Dave/Generated/PWM/pwm.c ****   {
 439:../Dave/Generated/PWM/pwm.c ****     /* Initialize consumed Apps */
 440:../Dave/Generated/PWM/pwm.c ****     status = (PWM_STATUS_t)GLOBAL_CCU8_Init(handle_ptr->global_ccu8_handle);
 441:../Dave/Generated/PWM/pwm.c **** 
 442:../Dave/Generated/PWM/pwm.c ****     /*Initialize CCU8 slice */
 443:../Dave/Generated/PWM/pwm.c ****     if (PWM_STATUS_SUCCESS == status)
 444:../Dave/Generated/PWM/pwm.c ****     {
 445:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_Init:Initilizing Slice")
 446:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_CompareInit(handle_ptr->ccu8_slice_ptr, handle_ptr->ccu8_slice_config_ptr);
 447:../Dave/Generated/PWM/pwm.c **** 
 448:../Dave/Generated/PWM/pwm.c ****       /* Set the period and compare register values */
 449:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr,
 450:../Dave/Generated/PWM/pwm.c ****     		                            (uint16_t)handle_ptr->period_value);
 451:../Dave/Generated/PWM/pwm.c **** 
 452:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 453:../Dave/Generated/PWM/pwm.c ****     		                              (uint16_t)handle_ptr->compare_value);
 454:../Dave/Generated/PWM/pwm.c **** 
 455:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 456:../Dave/Generated/PWM/pwm.c **** 
 457:../Dave/Generated/PWM/pwm.c ****       /* Initialize interrupts */
 458:../Dave/Generated/PWM/pwm.c ****       PWM_lCCU8_ConfigInterrupts(handle_ptr);
 459:../Dave/Generated/PWM/pwm.c **** 
 460:../Dave/Generated/PWM/pwm.c ****       XMC_GPIO_Init(handle_ptr->gpio_out_port,handle_ptr->gpio_out_pin,
 461:../Dave/Generated/PWM/pwm.c ****     		        handle_ptr->gpio_out_config);
 462:../Dave/Generated/PWM/pwm.c **** 
 463:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_SUCCESS;
 464:../Dave/Generated/PWM/pwm.c **** 
 465:../Dave/Generated/PWM/pwm.c ****       /* Start the PWM generation if start at initialization is enabled */
 466:../Dave/Generated/PWM/pwm.c ****       if ((bool) true == handle_ptr->start_control)
 467:../Dave/Generated/PWM/pwm.c ****       {
 468:../Dave/Generated/PWM/pwm.c ****         PWM_Start(handle_ptr);
 469:../Dave/Generated/PWM/pwm.c ****       }
 470:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 471:../Dave/Generated/PWM/pwm.c ****     }
 472:../Dave/Generated/PWM/pwm.c ****     else
 473:../Dave/Generated/PWM/pwm.c ****     {
 474:../Dave/Generated/PWM/pwm.c ****       handle_ptr->state = PWM_STATUS_UNINITIALIZED;
 475:../Dave/Generated/PWM/pwm.c ****     }
 476:../Dave/Generated/PWM/pwm.c **** 
 477:../Dave/Generated/PWM/pwm.c ****   }
 478:../Dave/Generated/PWM/pwm.c ****   return(status);
 479:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_Init() api */
 480:../Dave/Generated/PWM/pwm.c **** 
 481:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 482:../Dave/Generated/PWM/pwm.c **** /* Initialize interrupts */
 483:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_ConfigInterrupts(PWM_t *const handle_ptr)
 484:../Dave/Generated/PWM/pwm.c **** {
 485:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->period_match_enable)
 486:../Dave/Generated/PWM/pwm.c ****   {
 487:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_ConfigInterrupts:period match event enable")
 488:../Dave/Generated/PWM/pwm.c **** 
 489:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 490:../Dave/Generated/PWM/pwm.c **** 
 491:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node for period match event */
 492:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH,
 493:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu8_slice_period_match_node);
 494:../Dave/Generated/PWM/pwm.c ****   }
 495:../Dave/Generated/PWM/pwm.c **** 
 496:../Dave/Generated/PWM/pwm.c ****   if ((bool) true == handle_ptr->compare_match_enable)
 497:../Dave/Generated/PWM/pwm.c ****   {
 498:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_ConfigInterrupts:compare match event enable ")
 499:../Dave/Generated/PWM/pwm.c **** 
 500:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 501:../Dave/Generated/PWM/pwm.c ****     /* Bind event to Service Request Node for compare match event */
 502:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH
 503:../Dave/Generated/PWM/pwm.c ****                                     handle_ptr->ccu8_slice_compare_match_node);
 504:../Dave/Generated/PWM/pwm.c ****   }
 505:../Dave/Generated/PWM/pwm.c **** }
 506:../Dave/Generated/PWM/pwm.c **** 
 507:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 508:../Dave/Generated/PWM/pwm.c **** /*Starts the CCU8 slice. */
 509:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Start(PWM_t *const handle_ptr)
 510:../Dave/Generated/PWM/pwm.c **** {
 511:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_Start:Invalid handle_ptr" , (handle_ptr != NULL))
 512:../Dave/Generated/PWM/pwm.c **** 
 513:../Dave/Generated/PWM/pwm.c ****   if ((PWM_STATUS_SUCCESS == handle_ptr->state) || (PWM_STATUS_STOPPED == handle_ptr->state))
 514:../Dave/Generated/PWM/pwm.c ****   {
 515:../Dave/Generated/PWM/pwm.c ****     /* Clears IDLE mode for the slice */
 516:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_EnableClock(handle_ptr->ccu8_kernel_ptr,handle_ptr->slice_number);
 517:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_StartTimer(handle_ptr->ccu8_slice_ptr);
 518:../Dave/Generated/PWM/pwm.c **** 
 519:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_RUNNING;
 520:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_Start:start PWM")
 521:../Dave/Generated/PWM/pwm.c ****   }
 522:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_Start() api */
 523:../Dave/Generated/PWM/pwm.c **** 
 524:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 525:../Dave/Generated/PWM/pwm.c **** /*Stops the CCU8 slice. */
 526:../Dave/Generated/PWM/pwm.c **** void PWM_lCCU8_Stop(PWM_t *const handle_ptr)
 527:../Dave/Generated/PWM/pwm.c **** {
 528:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_Stop:Invalid handle_ptr" , (handle_ptr != NULL))
 529:../Dave/Generated/PWM/pwm.c **** 
 530:../Dave/Generated/PWM/pwm.c ****   if (PWM_STATUS_UNINITIALIZED != handle_ptr->state)
 531:../Dave/Generated/PWM/pwm.c ****   {
 532:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_StopTimer(handle_ptr->ccu8_slice_ptr);
 533:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_ClearTimer(handle_ptr->ccu8_slice_ptr);
 534:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_DisableClock(handle_ptr->ccu8_kernel_ptr, handle_ptr->slice_number);
 535:../Dave/Generated/PWM/pwm.c **** 
 536:../Dave/Generated/PWM/pwm.c ****     handle_ptr->state = PWM_STATUS_STOPPED;
 537:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_Stop:stop PWM")
 538:../Dave/Generated/PWM/pwm.c ****   }
 539:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_Stop() api */
 540:../Dave/Generated/PWM/pwm.c **** 
 541:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 542:../Dave/Generated/PWM/pwm.c **** /*Sets the duty cycle for CCU8 slice. */
 543:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle)
 544:../Dave/Generated/PWM/pwm.c **** {
 545:../Dave/Generated/PWM/pwm.c ****   uint32_t period;
 546:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 547:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 548:../Dave/Generated/PWM/pwm.c **** 
 549:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetDutyCycle:Invalid handle_ptr" , (handle_ptr != NULL))
 550:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetDutyCycle:Invalid duty_cycle",((duty_cycle >= 0) &&
 551:../Dave/Generated/PWM/pwm.c ****                                                           (duty_cycle <= PWM_MAX_DUTY_CYCLE)))
 552:../Dave/Generated/PWM/pwm.c **** 
 553:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 554:../Dave/Generated/PWM/pwm.c ****   if (handle_ptr->state != PWM_STATUS_UNINITIALIZED)
 555:../Dave/Generated/PWM/pwm.c ****   {
 556:../Dave/Generated/PWM/pwm.c ****     /* Duty cycle needs between 0 and 10000 */
 557:../Dave/Generated/PWM/pwm.c ****     if (duty_cycle <= PWM_MAX_DUTY_CYCLE)
 558:../Dave/Generated/PWM/pwm.c ****     {
 559:../Dave/Generated/PWM/pwm.c ****       period = (uint32_t)handle_ptr->period_value + 1U;
 560:../Dave/Generated/PWM/pwm.c **** 
 561:../Dave/Generated/PWM/pwm.c ****       /* Duty Cycle(symmetric) = (PR-CR1)+1 / period */
 562:../Dave/Generated/PWM/pwm.c ****       compare = ((period * ((uint32_t) PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PWM_DU
 563:../Dave/Generated/PWM/pwm.c **** 
 564:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 565:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 566:../Dave/Generated/PWM/pwm.c **** 
 567:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 568:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)compare);
 569:../Dave/Generated/PWM/pwm.c **** 
 570:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 571:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_SUCCESS;
 572:../Dave/Generated/PWM/pwm.c ****     }
 573:../Dave/Generated/PWM/pwm.c ****   }
 574:../Dave/Generated/PWM/pwm.c **** 
 575:../Dave/Generated/PWM/pwm.c ****   XMC_DEBUG("PWM_lCCU8_SetDutyCycle:dutycycle set")
 576:../Dave/Generated/PWM/pwm.c ****   return (status);
 577:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_SetDutyCycle() api */
 578:../Dave/Generated/PWM/pwm.c **** 
 579:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 580:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency for CCU8 slice. */
 581:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz)
 582:../Dave/Generated/PWM/pwm.c **** {
 583:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 584:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 585:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 586:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 587:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 588:../Dave/Generated/PWM/pwm.c **** 
 589:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetFreq:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 590:../Dave/Generated/PWM/pwm.c **** 
 591:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 592:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 593:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 594:../Dave/Generated/PWM/pwm.c **** 
 595:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 596:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 597:../Dave/Generated/PWM/pwm.c ****   {
 598:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 599:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 600:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu8_handle->module_frequency;
 601:../Dave/Generated/PWM/pwm.c **** 
 602:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 603:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 604:../Dave/Generated/PWM/pwm.c ****     {
 605:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 606:../Dave/Generated/PWM/pwm.c ****       /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 607:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT)
 608:../Dave/Generated/PWM/pwm.c ****       {
 609:../Dave/Generated/PWM/pwm.c ****         break;
 610:../Dave/Generated/PWM/pwm.c ****       }
 611:../Dave/Generated/PWM/pwm.c **** 
 612:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 613:../Dave/Generated/PWM/pwm.c ****     }
 614:../Dave/Generated/PWM/pwm.c **** 
 615:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 616:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || ((uint32_t)0 == period_value))
 617:../Dave/Generated/PWM/pwm.c ****     {
 618:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreq:frequency could not be set")
 619:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 620:../Dave/Generated/PWM/pwm.c ****     }
 621:../Dave/Generated/PWM/pwm.c ****     else
 622:../Dave/Generated/PWM/pwm.c ****     {
 623:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values*/
 624:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * (PWM_MAX_DUTY_CYCLE - handle_ptr->duty_cycle))
 625:../Dave/Generated/PWM/pwm.c ****           		     / ((uint32_t) 100 * PWM_DUTY_CYCLE_SCALE);
 626:../Dave/Generated/PWM/pwm.c **** 
 627:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetPrescaler(handle_ptr->ccu8_slice_ptr, prescaler);
 628:../Dave/Generated/PWM/pwm.c **** 
 629:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 630:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 631:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period_value));
 632:../Dave/Generated/PWM/pwm.c **** 
 633:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 634:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)compare);
 635:../Dave/Generated/PWM/pwm.c **** 
 636:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 637:../Dave/Generated/PWM/pwm.c **** 
 638:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 639:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 640:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreq:frequency set")
 641:../Dave/Generated/PWM/pwm.c **** 	}
 642:../Dave/Generated/PWM/pwm.c ****   }
 643:../Dave/Generated/PWM/pwm.c ****   else
 644:../Dave/Generated/PWM/pwm.c ****   {
 645:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 646:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_SetFreq:frequency could not be set")
 647:../Dave/Generated/PWM/pwm.c ****   }
 648:../Dave/Generated/PWM/pwm.c **** 
 649:../Dave/Generated/PWM/pwm.c ****   return status;
 650:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_SetFreq() api */
 651:../Dave/Generated/PWM/pwm.c **** 
 652:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 653:../Dave/Generated/PWM/pwm.c **** /*Sets the frequency and duty cycle for CCU8 slice. */
 654:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_lCCU8_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t 
 655:../Dave/Generated/PWM/pwm.c **** {
 656:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 657:../Dave/Generated/PWM/pwm.c ****   uint32_t module_freq;
 658:../Dave/Generated/PWM/pwm.c ****   uint8_t prescaler;
 659:../Dave/Generated/PWM/pwm.c ****   uint32_t period_value;
 660:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 661:../Dave/Generated/PWM/pwm.c **** 
 662:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetFreqAndDutyCycle:Invalid pwm_freq_hz " , (pwm_freq_hz != 0U))
 663:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_lCCU8_SetFreqAndDutyCycle:Invalid duty_cycle",((duty_cycle >= 0) &&
 664:../Dave/Generated/PWM/pwm.c ****   		                                                       (duty_cycle <= PWM_MAX_DUTY_CYCLE)))
 665:../Dave/Generated/PWM/pwm.c **** 
 666:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 667:../Dave/Generated/PWM/pwm.c ****   prescaler = 0U;
 668:../Dave/Generated/PWM/pwm.c ****   period_value = 0U;
 669:../Dave/Generated/PWM/pwm.c **** 
 670:../Dave/Generated/PWM/pwm.c ****   /* Can't set the frequency when the PWM is not yet initialized or when required frequency is 0*/
 671:../Dave/Generated/PWM/pwm.c ****   if ((status != PWM_STATUS_UNINITIALIZED) && ((uint32_t)0 != pwm_freq_hz))
 672:../Dave/Generated/PWM/pwm.c ****   {
 673:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 674:../Dave/Generated/PWM/pwm.c ****     /*Get the Module frequency*/
 675:../Dave/Generated/PWM/pwm.c ****     module_freq = handle_ptr->global_ccu8_handle->module_frequency;
 676:../Dave/Generated/PWM/pwm.c **** 
 677:../Dave/Generated/PWM/pwm.c ****     /*Calculate the prescaler and the period register values.*/
 678:../Dave/Generated/PWM/pwm.c ****     while (prescaler <= PWM_MAX_PRESCALER)
 679:../Dave/Generated/PWM/pwm.c ****     {
 680:../Dave/Generated/PWM/pwm.c ****       period_value = (uint32_t)((uint32_t)module_freq / (uint32_t)pwm_freq_hz) >> (uint32_t)prescal
 681:../Dave/Generated/PWM/pwm.c **** 	  /*If the prescaler selected is not big enough goto the next prescaler value else come out.*/
 682:../Dave/Generated/PWM/pwm.c ****       if (period_value <= PWM_MAX_TIMER_COUNT)
 683:../Dave/Generated/PWM/pwm.c ****       {
 684:../Dave/Generated/PWM/pwm.c ****         break;
 685:../Dave/Generated/PWM/pwm.c ****       }
 686:../Dave/Generated/PWM/pwm.c ****       prescaler++;
 687:../Dave/Generated/PWM/pwm.c ****     }
 688:../Dave/Generated/PWM/pwm.c **** 
 689:../Dave/Generated/PWM/pwm.c ****     /*Can't set the frequency if the required value is too small or when the required frequency is 
 690:../Dave/Generated/PWM/pwm.c ****     if ((prescaler > PWM_MAX_PRESCALER) || (duty_cycle > PWM_MAX_DUTY_CYCLE) || ((uint32_t)0 == per
 691:../Dave/Generated/PWM/pwm.c ****     {
 692:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreqAndDutyCycle:Frequency or duty cycle could not be set")
 693:../Dave/Generated/PWM/pwm.c ****       status = PWM_STATUS_FAILURE;
 694:../Dave/Generated/PWM/pwm.c ****     }
 695:../Dave/Generated/PWM/pwm.c ****     else
 696:../Dave/Generated/PWM/pwm.c ****     {
 697:../Dave/Generated/PWM/pwm.c ****       /*Calculate the new compare values using new period values */
 698:../Dave/Generated/PWM/pwm.c ****       compare = (period_value * ((uint32_t)PWM_MAX_DUTY_CYCLE - duty_cycle)) / ((uint32_t) 100 * PW
 699:../Dave/Generated/PWM/pwm.c **** 
 700:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetPrescaler(handle_ptr->ccu8_slice_ptr, prescaler);
 701:../Dave/Generated/PWM/pwm.c **** 
 702:../Dave/Generated/PWM/pwm.c ****       /* The period register is always one count less than calculated.*/
 703:../Dave/Generated/PWM/pwm.c ****       period_value = period_value - (uint32_t)1;
 704:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period_value));
 705:../Dave/Generated/PWM/pwm.c **** 
 706:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 707:../Dave/Generated/PWM/pwm.c ****     		                             (uint16_t)compare);
 708:../Dave/Generated/PWM/pwm.c **** 
 709:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 710:../Dave/Generated/PWM/pwm.c **** 
 711:../Dave/Generated/PWM/pwm.c ****       handle_ptr->compare_value = compare;
 712:../Dave/Generated/PWM/pwm.c ****       handle_ptr->period_value = period_value;
 713:../Dave/Generated/PWM/pwm.c ****       handle_ptr->duty_cycle = duty_cycle;
 714:../Dave/Generated/PWM/pwm.c ****       XMC_DEBUG("PWM_lCCU8_SetFreqAndDutyCycle:Frequency and Duty cycle set")
 715:../Dave/Generated/PWM/pwm.c ****     }
 716:../Dave/Generated/PWM/pwm.c ****   }
 717:../Dave/Generated/PWM/pwm.c ****   else
 718:../Dave/Generated/PWM/pwm.c ****   {
 719:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 720:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_lCCU8_SetFreqAndDutyCycle:Frequency and Duty cycle could not be set")
 721:../Dave/Generated/PWM/pwm.c ****   }
 722:../Dave/Generated/PWM/pwm.c **** 
 723:../Dave/Generated/PWM/pwm.c **** 
 724:../Dave/Generated/PWM/pwm.c ****   return status;
 725:../Dave/Generated/PWM/pwm.c **** } /* end of PWM_lCCU8_SetFreqAndDutyCycle() api */
 726:../Dave/Generated/PWM/pwm.c **** 
 727:../Dave/Generated/PWM/pwm.c **** #endif /* end of CCU8 function definitions */
 728:../Dave/Generated/PWM/pwm.c **** 
 729:../Dave/Generated/PWM/pwm.c **** /**************************************************************************************************
 730:../Dave/Generated/PWM/pwm.c ****  * API IMPLEMENTATION
 731:../Dave/Generated/PWM/pwm.c ****  **************************************************************************************************
 732:../Dave/Generated/PWM/pwm.c **** 
 733:../Dave/Generated/PWM/pwm.c **** /*This function returns the version of the PWM App*/
 734:../Dave/Generated/PWM/pwm.c **** DAVE_APP_VERSION_t PWM_GetAppVersion(void)
 735:../Dave/Generated/PWM/pwm.c **** {
 1389              	 .loc 2 735 0
 1390              	 .cfi_startproc
 1391              	 
 1392              	 
 1393              	 
 1394 0000 80B4     	 push {r7}
 1395              	.LCFI107:
 1396              	 .cfi_def_cfa_offset 4
 1397              	 .cfi_offset 7,-4
 1398 0002 83B0     	 sub sp,sp,#12
 1399              	.LCFI108:
 1400              	 .cfi_def_cfa_offset 16
 1401 0004 00AF     	 add r7,sp,#0
 1402              	.LCFI109:
 1403              	 .cfi_def_cfa_register 7
 736:../Dave/Generated/PWM/pwm.c ****   DAVE_APP_VERSION_t version;
 737:../Dave/Generated/PWM/pwm.c **** 
 738:../Dave/Generated/PWM/pwm.c ****   version.major = (uint8_t) PWM_MAJOR_VERSION;
 1404              	 .loc 2 738 0
 1405 0006 0423     	 movs r3,#4
 1406 0008 3B70     	 strb r3,[r7]
 739:../Dave/Generated/PWM/pwm.c ****   version.minor = (uint8_t) PWM_MINOR_VERSION;
 1407              	 .loc 2 739 0
 1408 000a 0123     	 movs r3,#1
 1409 000c 7B70     	 strb r3,[r7,#1]
 740:../Dave/Generated/PWM/pwm.c ****   version.patch = (uint8_t) PWM_PATCH_VERSION;
 1410              	 .loc 2 740 0
 1411 000e 0A23     	 movs r3,#10
 1412 0010 BB70     	 strb r3,[r7,#2]
 741:../Dave/Generated/PWM/pwm.c **** 
 742:../Dave/Generated/PWM/pwm.c ****   return version;
 1413              	 .loc 2 742 0
 1414 0012 3B1D     	 adds r3,r7,#4
 1415 0014 3A46     	 mov r2,r7
 1416 0016 1268     	 ldr r2,[r2]
 1417 0018 1146     	 mov r1,r2
 1418 001a 1980     	 strh r1,[r3]
 1419 001c 0233     	 adds r3,r3,#2
 1420 001e 120C     	 lsrs r2,r2,#16
 1421 0020 1A70     	 strb r2,[r3]
 1422 0022 0023     	 movs r3,#0
 1423 0024 3A79     	 ldrb r2,[r7,#4]
 1424 0026 62F30703 	 bfi r3,r2,#0,#8
 1425 002a 7A79     	 ldrb r2,[r7,#5]
 1426 002c 62F30F23 	 bfi r3,r2,#8,#8
 1427 0030 BA79     	 ldrb r2,[r7,#6]
 1428 0032 62F31743 	 bfi r3,r2,#16,#8
 743:../Dave/Generated/PWM/pwm.c **** }
 1429              	 .loc 2 743 0
 1430 0036 1846     	 mov r0,r3
 1431 0038 0C37     	 adds r7,r7,#12
 1432              	.LCFI110:
 1433              	 .cfi_def_cfa_offset 4
 1434 003a BD46     	 mov sp,r7
 1435              	.LCFI111:
 1436              	 .cfi_def_cfa_register 13
 1437              	 
 1438 003c 5DF8047B 	 ldr r7,[sp],#4
 1439              	.LCFI112:
 1440              	 .cfi_restore 7
 1441              	 .cfi_def_cfa_offset 0
 1442 0040 7047     	 bx lr
 1443              	 .cfi_endproc
 1444              	.LFE229:
 1446 0042 00BF     	 .section .text.PWM_Init,"ax",%progbits
 1447              	 .align 2
 1448              	 .global PWM_Init
 1449              	 .thumb
 1450              	 .thumb_func
 1452              	PWM_Init:
 1453              	.LFB230:
 744:../Dave/Generated/PWM/pwm.c **** 
 745:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 746:../Dave/Generated/PWM/pwm.c **** /* This function initializes the app */
 747:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_Init(PWM_t *const handle_ptr)
 748:../Dave/Generated/PWM/pwm.c **** {
 1454              	 .loc 2 748 0
 1455              	 .cfi_startproc
 1456              	 
 1457              	 
 1458 0000 80B5     	 push {r7,lr}
 1459              	.LCFI113:
 1460              	 .cfi_def_cfa_offset 8
 1461              	 .cfi_offset 7,-8
 1462              	 .cfi_offset 14,-4
 1463 0002 84B0     	 sub sp,sp,#16
 1464              	.LCFI114:
 1465              	 .cfi_def_cfa_offset 24
 1466 0004 00AF     	 add r7,sp,#0
 1467              	.LCFI115:
 1468              	 .cfi_def_cfa_register 7
 1469 0006 7860     	 str r0,[r7,#4]
 749:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 750:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 1470              	 .loc 2 750 0
 1471 0008 0123     	 movs r3,#1
 1472 000a FB73     	 strb r3,[r7,#15]
 751:../Dave/Generated/PWM/pwm.c **** 
 752:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_Init:Invalid handle_ptr" , (handle_ptr != NULL))
 753:../Dave/Generated/PWM/pwm.c **** 
 754:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 755:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1473              	 .loc 2 755 0
 1474 000c 7B68     	 ldr r3,[r7,#4]
 1475 000e 93F82830 	 ldrb r3,[r3,#40]
 1476 0012 002B     	 cmp r3,#0
 1477 0014 04D1     	 bne .L62
 756:../Dave/Generated/PWM/pwm.c ****   {
 757:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_Init(handle_ptr);
 1478              	 .loc 2 757 0
 1479 0016 7868     	 ldr r0,[r7,#4]
 1480 0018 FFF7FEFF 	 bl PWM_lCCU4_Init
 1481 001c 0346     	 mov r3,r0
 1482 001e FB73     	 strb r3,[r7,#15]
 1483              	.L62:
 758:../Dave/Generated/PWM/pwm.c ****   }
 759:../Dave/Generated/PWM/pwm.c **** #endif
 760:../Dave/Generated/PWM/pwm.c **** 
 761:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 762:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 763:../Dave/Generated/PWM/pwm.c ****   {
 764:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_Init(handle_ptr);
 765:../Dave/Generated/PWM/pwm.c ****   }
 766:../Dave/Generated/PWM/pwm.c **** #endif
 767:../Dave/Generated/PWM/pwm.c **** 
 768:../Dave/Generated/PWM/pwm.c ****   return (status);
 1484              	 .loc 2 768 0
 1485 0020 FB7B     	 ldrb r3,[r7,#15]
 769:../Dave/Generated/PWM/pwm.c **** }
 1486              	 .loc 2 769 0
 1487 0022 1846     	 mov r0,r3
 1488 0024 1037     	 adds r7,r7,#16
 1489              	.LCFI116:
 1490              	 .cfi_def_cfa_offset 8
 1491 0026 BD46     	 mov sp,r7
 1492              	.LCFI117:
 1493              	 .cfi_def_cfa_register 13
 1494              	 
 1495 0028 80BD     	 pop {r7,pc}
 1496              	 .cfi_endproc
 1497              	.LFE230:
 1499 002a 00BF     	 .section .text.PWM_Start,"ax",%progbits
 1500              	 .align 2
 1501              	 .global PWM_Start
 1502              	 .thumb
 1503              	 .thumb_func
 1505              	PWM_Start:
 1506              	.LFB231:
 770:../Dave/Generated/PWM/pwm.c **** 
 771:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 772:../Dave/Generated/PWM/pwm.c **** /* This function starts the PWM generation. This needs to be called even if external start is confi
 773:../Dave/Generated/PWM/pwm.c **** void PWM_Start(PWM_t *const handle_ptr)
 774:../Dave/Generated/PWM/pwm.c **** {
 1507              	 .loc 2 774 0
 1508              	 .cfi_startproc
 1509              	 
 1510              	 
 1511 0000 80B5     	 push {r7,lr}
 1512              	.LCFI118:
 1513              	 .cfi_def_cfa_offset 8
 1514              	 .cfi_offset 7,-8
 1515              	 .cfi_offset 14,-4
 1516 0002 82B0     	 sub sp,sp,#8
 1517              	.LCFI119:
 1518              	 .cfi_def_cfa_offset 16
 1519 0004 00AF     	 add r7,sp,#0
 1520              	.LCFI120:
 1521              	 .cfi_def_cfa_register 7
 1522 0006 7860     	 str r0,[r7,#4]
 775:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_Start:Invalid handle_ptr" , (handle_ptr != NULL))
 776:../Dave/Generated/PWM/pwm.c **** 
 777:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 778:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1523              	 .loc 2 778 0
 1524 0008 7B68     	 ldr r3,[r7,#4]
 1525 000a 93F82830 	 ldrb r3,[r3,#40]
 1526 000e 002B     	 cmp r3,#0
 1527 0010 02D1     	 bne .L64
 779:../Dave/Generated/PWM/pwm.c ****   {
 780:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU4_Start(handle_ptr);
 1528              	 .loc 2 780 0
 1529 0012 7868     	 ldr r0,[r7,#4]
 1530 0014 FFF7FEFF 	 bl PWM_lCCU4_Start
 1531              	.L64:
 781:../Dave/Generated/PWM/pwm.c ****   }
 782:../Dave/Generated/PWM/pwm.c **** #endif
 783:../Dave/Generated/PWM/pwm.c **** 
 784:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 785:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 786:../Dave/Generated/PWM/pwm.c ****   {
 787:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU8_Start(handle_ptr);
 788:../Dave/Generated/PWM/pwm.c ****   }
 789:../Dave/Generated/PWM/pwm.c **** #endif
 790:../Dave/Generated/PWM/pwm.c **** }
 1532              	 .loc 2 790 0
 1533 0018 0837     	 adds r7,r7,#8
 1534              	.LCFI121:
 1535              	 .cfi_def_cfa_offset 8
 1536 001a BD46     	 mov sp,r7
 1537              	.LCFI122:
 1538              	 .cfi_def_cfa_register 13
 1539              	 
 1540 001c 80BD     	 pop {r7,pc}
 1541              	 .cfi_endproc
 1542              	.LFE231:
 1544 001e 00BF     	 .section .text.PWM_Stop,"ax",%progbits
 1545              	 .align 2
 1546              	 .global PWM_Stop
 1547              	 .thumb
 1548              	 .thumb_func
 1550              	PWM_Stop:
 1551              	.LFB232:
 791:../Dave/Generated/PWM/pwm.c **** 
 792:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 793:../Dave/Generated/PWM/pwm.c **** /* This function stops the PWM generation. */
 794:../Dave/Generated/PWM/pwm.c **** void PWM_Stop(PWM_t *const handle_ptr)
 795:../Dave/Generated/PWM/pwm.c **** {
 1552              	 .loc 2 795 0
 1553              	 .cfi_startproc
 1554              	 
 1555              	 
 1556 0000 80B5     	 push {r7,lr}
 1557              	.LCFI123:
 1558              	 .cfi_def_cfa_offset 8
 1559              	 .cfi_offset 7,-8
 1560              	 .cfi_offset 14,-4
 1561 0002 82B0     	 sub sp,sp,#8
 1562              	.LCFI124:
 1563              	 .cfi_def_cfa_offset 16
 1564 0004 00AF     	 add r7,sp,#0
 1565              	.LCFI125:
 1566              	 .cfi_def_cfa_register 7
 1567 0006 7860     	 str r0,[r7,#4]
 796:../Dave/Generated/PWM/pwm.c **** 
 797:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_Stop:Invalid handle_ptr" , (handle_ptr != NULL))
 798:../Dave/Generated/PWM/pwm.c **** 
 799:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 800:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1568              	 .loc 2 800 0
 1569 0008 7B68     	 ldr r3,[r7,#4]
 1570 000a 93F82830 	 ldrb r3,[r3,#40]
 1571 000e 002B     	 cmp r3,#0
 1572 0010 02D1     	 bne .L66
 801:../Dave/Generated/PWM/pwm.c ****   {
 802:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU4_Stop(handle_ptr);
 1573              	 .loc 2 802 0
 1574 0012 7868     	 ldr r0,[r7,#4]
 1575 0014 FFF7FEFF 	 bl PWM_lCCU4_Stop
 1576              	.L66:
 803:../Dave/Generated/PWM/pwm.c ****   }
 804:../Dave/Generated/PWM/pwm.c **** #endif
 805:../Dave/Generated/PWM/pwm.c **** 
 806:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 807:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 808:../Dave/Generated/PWM/pwm.c ****   {
 809:../Dave/Generated/PWM/pwm.c ****     PWM_lCCU8_Stop(handle_ptr);
 810:../Dave/Generated/PWM/pwm.c ****   }
 811:../Dave/Generated/PWM/pwm.c **** #endif
 812:../Dave/Generated/PWM/pwm.c **** }
 1577              	 .loc 2 812 0
 1578 0018 0837     	 adds r7,r7,#8
 1579              	.LCFI126:
 1580              	 .cfi_def_cfa_offset 8
 1581 001a BD46     	 mov sp,r7
 1582              	.LCFI127:
 1583              	 .cfi_def_cfa_register 13
 1584              	 
 1585 001c 80BD     	 pop {r7,pc}
 1586              	 .cfi_endproc
 1587              	.LFE232:
 1589 001e 00BF     	 .section .text.PWM_SetDutyCycle,"ax",%progbits
 1590              	 .align 2
 1591              	 .global PWM_SetDutyCycle
 1592              	 .thumb
 1593              	 .thumb_func
 1595              	PWM_SetDutyCycle:
 1596              	.LFB233:
 813:../Dave/Generated/PWM/pwm.c **** 
 814:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 815:../Dave/Generated/PWM/pwm.c **** /*This function is used to set the duty cycle (uint32_t) of the PWM waveform  */
 816:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetDutyCycle(PWM_t *const handle_ptr, uint32_t duty_cycle)
 817:../Dave/Generated/PWM/pwm.c **** {
 1597              	 .loc 2 817 0
 1598              	 .cfi_startproc
 1599              	 
 1600              	 
 1601 0000 80B5     	 push {r7,lr}
 1602              	.LCFI128:
 1603              	 .cfi_def_cfa_offset 8
 1604              	 .cfi_offset 7,-8
 1605              	 .cfi_offset 14,-4
 1606 0002 84B0     	 sub sp,sp,#16
 1607              	.LCFI129:
 1608              	 .cfi_def_cfa_offset 24
 1609 0004 00AF     	 add r7,sp,#0
 1610              	.LCFI130:
 1611              	 .cfi_def_cfa_register 7
 1612 0006 7860     	 str r0,[r7,#4]
 1613 0008 3960     	 str r1,[r7]
 818:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 819:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 1614              	 .loc 2 819 0
 1615 000a 0123     	 movs r3,#1
 1616 000c FB73     	 strb r3,[r7,#15]
 820:../Dave/Generated/PWM/pwm.c **** 
 821:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetDutyCycle:Invalid handle_ptr" , (handle_ptr != NULL))
 822:../Dave/Generated/PWM/pwm.c **** 
 823:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 824:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1617              	 .loc 2 824 0
 1618 000e 7B68     	 ldr r3,[r7,#4]
 1619 0010 93F82830 	 ldrb r3,[r3,#40]
 1620 0014 002B     	 cmp r3,#0
 1621 0016 05D1     	 bne .L69
 825:../Dave/Generated/PWM/pwm.c ****   {
 826:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_SetDutyCycle(handle_ptr, duty_cycle);
 1622              	 .loc 2 826 0
 1623 0018 7868     	 ldr r0,[r7,#4]
 1624 001a 3968     	 ldr r1,[r7]
 1625 001c FFF7FEFF 	 bl PWM_lCCU4_SetDutyCycle
 1626 0020 0346     	 mov r3,r0
 1627 0022 FB73     	 strb r3,[r7,#15]
 1628              	.L69:
 827:../Dave/Generated/PWM/pwm.c ****   }
 828:../Dave/Generated/PWM/pwm.c **** #endif
 829:../Dave/Generated/PWM/pwm.c **** 
 830:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 831:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 832:../Dave/Generated/PWM/pwm.c ****   {
 833:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_SetDutyCycle(handle_ptr, duty_cycle);
 834:../Dave/Generated/PWM/pwm.c ****   }
 835:../Dave/Generated/PWM/pwm.c **** #endif
 836:../Dave/Generated/PWM/pwm.c ****   return (status);
 1629              	 .loc 2 836 0
 1630 0024 FB7B     	 ldrb r3,[r7,#15]
 837:../Dave/Generated/PWM/pwm.c **** }
 1631              	 .loc 2 837 0
 1632 0026 1846     	 mov r0,r3
 1633 0028 1037     	 adds r7,r7,#16
 1634              	.LCFI131:
 1635              	 .cfi_def_cfa_offset 8
 1636 002a BD46     	 mov sp,r7
 1637              	.LCFI132:
 1638              	 .cfi_def_cfa_register 13
 1639              	 
 1640 002c 80BD     	 pop {r7,pc}
 1641              	 .cfi_endproc
 1642              	.LFE233:
 1644 002e 00BF     	 .section .text.PWM_SetFreq,"ax",%progbits
 1645              	 .align 2
 1646              	 .global PWM_SetFreq
 1647              	 .thumb
 1648              	 .thumb_func
 1650              	PWM_SetFreq:
 1651              	.LFB234:
 838:../Dave/Generated/PWM/pwm.c **** 
 839:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 840:../Dave/Generated/PWM/pwm.c **** /*This function changes the PWM frequency. Input parameter is the frequency value in Hz */
 841:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetFreq(PWM_t *const handle_ptr, uint32_t pwm_freq_hz)
 842:../Dave/Generated/PWM/pwm.c **** {
 1652              	 .loc 2 842 0
 1653              	 .cfi_startproc
 1654              	 
 1655              	 
 1656 0000 80B5     	 push {r7,lr}
 1657              	.LCFI133:
 1658              	 .cfi_def_cfa_offset 8
 1659              	 .cfi_offset 7,-8
 1660              	 .cfi_offset 14,-4
 1661 0002 84B0     	 sub sp,sp,#16
 1662              	.LCFI134:
 1663              	 .cfi_def_cfa_offset 24
 1664 0004 00AF     	 add r7,sp,#0
 1665              	.LCFI135:
 1666              	 .cfi_def_cfa_register 7
 1667 0006 7860     	 str r0,[r7,#4]
 1668 0008 3960     	 str r1,[r7]
 843:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 844:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 1669              	 .loc 2 844 0
 1670 000a 0123     	 movs r3,#1
 1671 000c FB73     	 strb r3,[r7,#15]
 845:../Dave/Generated/PWM/pwm.c **** 
 846:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetFreq:Invalid handle_ptr" , (handle_ptr != NULL))
 847:../Dave/Generated/PWM/pwm.c **** 
 848:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 849:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1672              	 .loc 2 849 0
 1673 000e 7B68     	 ldr r3,[r7,#4]
 1674 0010 93F82830 	 ldrb r3,[r3,#40]
 1675 0014 002B     	 cmp r3,#0
 1676 0016 05D1     	 bne .L72
 850:../Dave/Generated/PWM/pwm.c ****   {
 851:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_SetFreq(handle_ptr, pwm_freq_hz);
 1677              	 .loc 2 851 0
 1678 0018 7868     	 ldr r0,[r7,#4]
 1679 001a 3968     	 ldr r1,[r7]
 1680 001c FFF7FEFF 	 bl PWM_lCCU4_SetFreq
 1681 0020 0346     	 mov r3,r0
 1682 0022 FB73     	 strb r3,[r7,#15]
 1683              	.L72:
 852:../Dave/Generated/PWM/pwm.c ****   }
 853:../Dave/Generated/PWM/pwm.c **** #endif
 854:../Dave/Generated/PWM/pwm.c **** 
 855:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 856:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 857:../Dave/Generated/PWM/pwm.c ****   {
 858:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_SetFreq(handle_ptr, pwm_freq_hz);
 859:../Dave/Generated/PWM/pwm.c ****   }
 860:../Dave/Generated/PWM/pwm.c **** #endif
 861:../Dave/Generated/PWM/pwm.c ****   return status;
 1684              	 .loc 2 861 0
 1685 0024 FB7B     	 ldrb r3,[r7,#15]
 862:../Dave/Generated/PWM/pwm.c **** }
 1686              	 .loc 2 862 0
 1687 0026 1846     	 mov r0,r3
 1688 0028 1037     	 adds r7,r7,#16
 1689              	.LCFI136:
 1690              	 .cfi_def_cfa_offset 8
 1691 002a BD46     	 mov sp,r7
 1692              	.LCFI137:
 1693              	 .cfi_def_cfa_register 13
 1694              	 
 1695 002c 80BD     	 pop {r7,pc}
 1696              	 .cfi_endproc
 1697              	.LFE234:
 1699 002e 00BF     	 .section .text.PWM_SetFreqAndDutyCycle,"ax",%progbits
 1700              	 .align 2
 1701              	 .global PWM_SetFreqAndDutyCycle
 1702              	 .thumb
 1703              	 .thumb_func
 1705              	PWM_SetFreqAndDutyCycle:
 1706              	.LFB235:
 863:../Dave/Generated/PWM/pwm.c **** 
 864:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 865:../Dave/Generated/PWM/pwm.c **** /*This function sets frequency and the duty cycle */
 866:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetFreqAndDutyCycle(PWM_t *const handle_ptr, uint32_t pwm_freq_hz, uint32_t duty_c
 867:../Dave/Generated/PWM/pwm.c **** {
 1707              	 .loc 2 867 0
 1708              	 .cfi_startproc
 1709              	 
 1710              	 
 1711 0000 80B5     	 push {r7,lr}
 1712              	.LCFI138:
 1713              	 .cfi_def_cfa_offset 8
 1714              	 .cfi_offset 7,-8
 1715              	 .cfi_offset 14,-4
 1716 0002 86B0     	 sub sp,sp,#24
 1717              	.LCFI139:
 1718              	 .cfi_def_cfa_offset 32
 1719 0004 00AF     	 add r7,sp,#0
 1720              	.LCFI140:
 1721              	 .cfi_def_cfa_register 7
 1722 0006 F860     	 str r0,[r7,#12]
 1723 0008 B960     	 str r1,[r7,#8]
 1724 000a 7A60     	 str r2,[r7,#4]
 868:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 869:../Dave/Generated/PWM/pwm.c ****   status = PWM_STATUS_FAILURE;
 1725              	 .loc 2 869 0
 1726 000c 0123     	 movs r3,#1
 1727 000e FB75     	 strb r3,[r7,#23]
 870:../Dave/Generated/PWM/pwm.c **** 
 871:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetFreqAndDutyCycle:Invalid handle_ptr" , (handle_ptr != NULL))
 872:../Dave/Generated/PWM/pwm.c **** 
 873:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 874:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1728              	 .loc 2 874 0
 1729 0010 FB68     	 ldr r3,[r7,#12]
 1730 0012 93F82830 	 ldrb r3,[r3,#40]
 1731 0016 002B     	 cmp r3,#0
 1732 0018 06D1     	 bne .L75
 875:../Dave/Generated/PWM/pwm.c ****   {
 876:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU4_SetFreqAndDutyCycle(handle_ptr, pwm_freq_hz, duty_cycle);
 1733              	 .loc 2 876 0
 1734 001a F868     	 ldr r0,[r7,#12]
 1735 001c B968     	 ldr r1,[r7,#8]
 1736 001e 7A68     	 ldr r2,[r7,#4]
 1737 0020 FFF7FEFF 	 bl PWM_lCCU4_SetFreqAndDutyCycle
 1738 0024 0346     	 mov r3,r0
 1739 0026 FB75     	 strb r3,[r7,#23]
 1740              	.L75:
 877:../Dave/Generated/PWM/pwm.c ****   }
 878:../Dave/Generated/PWM/pwm.c **** #endif
 879:../Dave/Generated/PWM/pwm.c **** 
 880:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 881:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 882:../Dave/Generated/PWM/pwm.c ****   {
 883:../Dave/Generated/PWM/pwm.c ****     status = PWM_lCCU8_SetFreqAndDutyCycle(handle_ptr, pwm_freq_hz, duty_cycle);
 884:../Dave/Generated/PWM/pwm.c ****   }
 885:../Dave/Generated/PWM/pwm.c **** #endif
 886:../Dave/Generated/PWM/pwm.c ****   return status;
 1741              	 .loc 2 886 0
 1742 0028 FB7D     	 ldrb r3,[r7,#23]
 887:../Dave/Generated/PWM/pwm.c **** }
 1743              	 .loc 2 887 0
 1744 002a 1846     	 mov r0,r3
 1745 002c 1837     	 adds r7,r7,#24
 1746              	.LCFI141:
 1747              	 .cfi_def_cfa_offset 8
 1748 002e BD46     	 mov sp,r7
 1749              	.LCFI142:
 1750              	 .cfi_def_cfa_register 13
 1751              	 
 1752 0030 80BD     	 pop {r7,pc}
 1753              	 .cfi_endproc
 1754              	.LFE235:
 1756 0032 00BF     	 .section .text.PWM_GetTimerStatus,"ax",%progbits
 1757              	 .align 2
 1758              	 .global PWM_GetTimerStatus
 1759              	 .thumb
 1760              	 .thumb_func
 1762              	PWM_GetTimerStatus:
 1763              	.LFB236:
 888:../Dave/Generated/PWM/pwm.c **** 
 889:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 890:../Dave/Generated/PWM/pwm.c **** /*This function changes the PWM timer status_timer */
 891:../Dave/Generated/PWM/pwm.c **** bool PWM_GetTimerStatus(PWM_t *const handle_ptr)
 892:../Dave/Generated/PWM/pwm.c **** {
 1764              	 .loc 2 892 0
 1765              	 .cfi_startproc
 1766              	 
 1767              	 
 1768 0000 80B5     	 push {r7,lr}
 1769              	.LCFI143:
 1770              	 .cfi_def_cfa_offset 8
 1771              	 .cfi_offset 7,-8
 1772              	 .cfi_offset 14,-4
 1773 0002 84B0     	 sub sp,sp,#16
 1774              	.LCFI144:
 1775              	 .cfi_def_cfa_offset 24
 1776 0004 00AF     	 add r7,sp,#0
 1777              	.LCFI145:
 1778              	 .cfi_def_cfa_register 7
 1779 0006 7860     	 str r0,[r7,#4]
 893:../Dave/Generated/PWM/pwm.c ****   bool status_timer;
 894:../Dave/Generated/PWM/pwm.c ****   status_timer = (bool)false;
 1780              	 .loc 2 894 0
 1781 0008 0023     	 movs r3,#0
 1782 000a FB73     	 strb r3,[r7,#15]
 895:../Dave/Generated/PWM/pwm.c **** 
 896:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_GetTimerStatus:Invalid handle_ptr" , (handle_ptr != NULL))
 897:../Dave/Generated/PWM/pwm.c **** 
 898:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 899:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1783              	 .loc 2 899 0
 1784 000c 7B68     	 ldr r3,[r7,#4]
 1785 000e 93F82830 	 ldrb r3,[r3,#40]
 1786 0012 002B     	 cmp r3,#0
 1787 0014 06D1     	 bne .L78
 900:../Dave/Generated/PWM/pwm.c ****   {
 901:../Dave/Generated/PWM/pwm.c ****     status_timer = XMC_CCU4_SLICE_IsTimerRunning(handle_ptr->ccu4_slice_ptr);
 1788              	 .loc 2 901 0
 1789 0016 7B68     	 ldr r3,[r7,#4]
 1790 0018 9B68     	 ldr r3,[r3,#8]
 1791 001a 1846     	 mov r0,r3
 1792 001c FFF7FEFF 	 bl XMC_CCU4_SLICE_IsTimerRunning
 1793 0020 0346     	 mov r3,r0
 1794 0022 FB73     	 strb r3,[r7,#15]
 1795              	.L78:
 902:../Dave/Generated/PWM/pwm.c ****   }
 903:../Dave/Generated/PWM/pwm.c **** #endif
 904:../Dave/Generated/PWM/pwm.c **** 
 905:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 906:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 907:../Dave/Generated/PWM/pwm.c ****   {
 908:../Dave/Generated/PWM/pwm.c ****     status_timer = XMC_CCU8_SLICE_IsTimerRunning(handle_ptr->ccu8_slice_ptr);
 909:../Dave/Generated/PWM/pwm.c ****   }
 910:../Dave/Generated/PWM/pwm.c **** #endif
 911:../Dave/Generated/PWM/pwm.c **** 
 912:../Dave/Generated/PWM/pwm.c ****   return (status_timer);
 1796              	 .loc 2 912 0
 1797 0024 FB7B     	 ldrb r3,[r7,#15]
 913:../Dave/Generated/PWM/pwm.c **** }
 1798              	 .loc 2 913 0
 1799 0026 1846     	 mov r0,r3
 1800 0028 1037     	 adds r7,r7,#16
 1801              	.LCFI146:
 1802              	 .cfi_def_cfa_offset 8
 1803 002a BD46     	 mov sp,r7
 1804              	.LCFI147:
 1805              	 .cfi_def_cfa_register 13
 1806              	 
 1807 002c 80BD     	 pop {r7,pc}
 1808              	 .cfi_endproc
 1809              	.LFE236:
 1811 002e 00BF     	 .section .text.PWM_GetInterruptStatus,"ax",%progbits
 1812              	 .align 2
 1813              	 .global PWM_GetInterruptStatus
 1814              	 .thumb
 1815              	 .thumb_func
 1817              	PWM_GetInterruptStatus:
 1818              	.LFB237:
 914:../Dave/Generated/PWM/pwm.c **** 
 915:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 916:../Dave/Generated/PWM/pwm.c **** /*This function returns the interrupt status_timer */
 917:../Dave/Generated/PWM/pwm.c **** bool PWM_GetInterruptStatus(PWM_t *const handle_ptr, PWM_INTERRUPT_t pwm_interrupt)
 918:../Dave/Generated/PWM/pwm.c **** {
 1819              	 .loc 2 918 0
 1820              	 .cfi_startproc
 1821              	 
 1822              	 
 1823 0000 80B5     	 push {r7,lr}
 1824              	.LCFI148:
 1825              	 .cfi_def_cfa_offset 8
 1826              	 .cfi_offset 7,-8
 1827              	 .cfi_offset 14,-4
 1828 0002 84B0     	 sub sp,sp,#16
 1829              	.LCFI149:
 1830              	 .cfi_def_cfa_offset 24
 1831 0004 00AF     	 add r7,sp,#0
 1832              	.LCFI150:
 1833              	 .cfi_def_cfa_register 7
 1834 0006 7860     	 str r0,[r7,#4]
 1835 0008 0B46     	 mov r3,r1
 1836 000a FB70     	 strb r3,[r7,#3]
 919:../Dave/Generated/PWM/pwm.c ****   bool status;
 920:../Dave/Generated/PWM/pwm.c ****   status = (bool) false;
 1837              	 .loc 2 920 0
 1838 000c 0023     	 movs r3,#0
 1839 000e FB73     	 strb r3,[r7,#15]
 921:../Dave/Generated/PWM/pwm.c **** 
 922:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_GetInterruptStatus:Invalid handle_ptr" , (handle_ptr != NULL))
 923:../Dave/Generated/PWM/pwm.c **** 
 924:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 925:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1840              	 .loc 2 925 0
 1841 0010 7B68     	 ldr r3,[r7,#4]
 1842 0012 93F82830 	 ldrb r3,[r3,#40]
 1843 0016 002B     	 cmp r3,#0
 1844 0018 08D1     	 bne .L81
 926:../Dave/Generated/PWM/pwm.c ****   {
 927:../Dave/Generated/PWM/pwm.c ****     status = XMC_CCU4_SLICE_GetEvent(handle_ptr->ccu4_slice_ptr, (XMC_CCU4_SLICE_IRQ_ID_t)pwm_inter
 1845              	 .loc 2 927 0
 1846 001a 7B68     	 ldr r3,[r7,#4]
 1847 001c 9A68     	 ldr r2,[r3,#8]
 1848 001e FB78     	 ldrb r3,[r7,#3]
 1849 0020 1046     	 mov r0,r2
 1850 0022 1946     	 mov r1,r3
 1851 0024 FFF7FEFF 	 bl XMC_CCU4_SLICE_GetEvent
 1852 0028 0346     	 mov r3,r0
 1853 002a FB73     	 strb r3,[r7,#15]
 1854              	.L81:
 928:../Dave/Generated/PWM/pwm.c ****   }
 929:../Dave/Generated/PWM/pwm.c **** #endif
 930:../Dave/Generated/PWM/pwm.c **** 
 931:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 932:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 933:../Dave/Generated/PWM/pwm.c ****   {
 934:../Dave/Generated/PWM/pwm.c ****     status = XMC_CCU8_SLICE_GetEvent(handle_ptr->ccu8_slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t)pwm_inter
 935:../Dave/Generated/PWM/pwm.c ****   }
 936:../Dave/Generated/PWM/pwm.c **** #endif
 937:../Dave/Generated/PWM/pwm.c **** 
 938:../Dave/Generated/PWM/pwm.c ****   return status;
 1855              	 .loc 2 938 0
 1856 002c FB7B     	 ldrb r3,[r7,#15]
 939:../Dave/Generated/PWM/pwm.c **** }
 1857              	 .loc 2 939 0
 1858 002e 1846     	 mov r0,r3
 1859 0030 1037     	 adds r7,r7,#16
 1860              	.LCFI151:
 1861              	 .cfi_def_cfa_offset 8
 1862 0032 BD46     	 mov sp,r7
 1863              	.LCFI152:
 1864              	 .cfi_def_cfa_register 13
 1865              	 
 1866 0034 80BD     	 pop {r7,pc}
 1867              	 .cfi_endproc
 1868              	.LFE237:
 1870 0036 00BF     	 .section .text.PWM_ClearEvent,"ax",%progbits
 1871              	 .align 2
 1872              	 .global PWM_ClearEvent
 1873              	 .thumb
 1874              	 .thumb_func
 1876              	PWM_ClearEvent:
 1877              	.LFB238:
 940:../Dave/Generated/PWM/pwm.c **** 
 941:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 942:../Dave/Generated/PWM/pwm.c **** /*This function Acknowledges the corresponding interrupt */
 943:../Dave/Generated/PWM/pwm.c **** void PWM_ClearEvent(PWM_t *const handle_ptr, PWM_INTERRUPT_t pwm_interrupt)
 944:../Dave/Generated/PWM/pwm.c **** {
 1878              	 .loc 2 944 0
 1879              	 .cfi_startproc
 1880              	 
 1881              	 
 1882 0000 80B5     	 push {r7,lr}
 1883              	.LCFI153:
 1884              	 .cfi_def_cfa_offset 8
 1885              	 .cfi_offset 7,-8
 1886              	 .cfi_offset 14,-4
 1887 0002 82B0     	 sub sp,sp,#8
 1888              	.LCFI154:
 1889              	 .cfi_def_cfa_offset 16
 1890 0004 00AF     	 add r7,sp,#0
 1891              	.LCFI155:
 1892              	 .cfi_def_cfa_register 7
 1893 0006 7860     	 str r0,[r7,#4]
 1894 0008 0B46     	 mov r3,r1
 1895 000a FB70     	 strb r3,[r7,#3]
 945:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_ClearEvent:Invalid handle_ptr" , (handle_ptr != NULL))
 946:../Dave/Generated/PWM/pwm.c **** 
 947:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 948:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1896              	 .loc 2 948 0
 1897 000c 7B68     	 ldr r3,[r7,#4]
 1898 000e 93F82830 	 ldrb r3,[r3,#40]
 1899 0012 002B     	 cmp r3,#0
 1900 0014 06D1     	 bne .L83
 949:../Dave/Generated/PWM/pwm.c ****   {
 950:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_ClearEvent(handle_ptr->ccu4_slice_ptr, (XMC_CCU4_SLICE_IRQ_ID_t) pwm_interrupt);
 1901              	 .loc 2 950 0
 1902 0016 7B68     	 ldr r3,[r7,#4]
 1903 0018 9A68     	 ldr r2,[r3,#8]
 1904 001a FB78     	 ldrb r3,[r7,#3]
 1905 001c 1046     	 mov r0,r2
 1906 001e 1946     	 mov r1,r3
 1907 0020 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearEvent
 1908              	.L83:
 951:../Dave/Generated/PWM/pwm.c ****   }
 952:../Dave/Generated/PWM/pwm.c **** #endif
 953:../Dave/Generated/PWM/pwm.c **** 
 954:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 955:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 956:../Dave/Generated/PWM/pwm.c ****   {
 957:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, (XMC_CCU8_SLICE_IRQ_ID_t) pwm_interrupt);
 958:../Dave/Generated/PWM/pwm.c ****   }
 959:../Dave/Generated/PWM/pwm.c **** #endif
 960:../Dave/Generated/PWM/pwm.c **** }
 1909              	 .loc 2 960 0
 1910 0024 0837     	 adds r7,r7,#8
 1911              	.LCFI156:
 1912              	 .cfi_def_cfa_offset 8
 1913 0026 BD46     	 mov sp,r7
 1914              	.LCFI157:
 1915              	 .cfi_def_cfa_register 13
 1916              	 
 1917 0028 80BD     	 pop {r7,pc}
 1918              	 .cfi_endproc
 1919              	.LFE238:
 1921 002a 00BF     	 .section .text.PWM_SetPassiveLevel,"ax",%progbits
 1922              	 .align 2
 1923              	 .global PWM_SetPassiveLevel
 1924              	 .thumb
 1925              	 .thumb_func
 1927              	PWM_SetPassiveLevel:
 1928              	.LFB239:
 961:../Dave/Generated/PWM/pwm.c **** 
 962:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 963:../Dave/Generated/PWM/pwm.c **** /*This function sets the passive level of the PWM*/
 964:../Dave/Generated/PWM/pwm.c **** void PWM_SetPassiveLevel(PWM_t *const handle_ptr, PWM_OUTPUT_PASSIVE_LEVEL_t pwm_output_passive_lev
 965:../Dave/Generated/PWM/pwm.c **** {
 1929              	 .loc 2 965 0
 1930              	 .cfi_startproc
 1931              	 
 1932              	 
 1933 0000 80B5     	 push {r7,lr}
 1934              	.LCFI158:
 1935              	 .cfi_def_cfa_offset 8
 1936              	 .cfi_offset 7,-8
 1937              	 .cfi_offset 14,-4
 1938 0002 82B0     	 sub sp,sp,#8
 1939              	.LCFI159:
 1940              	 .cfi_def_cfa_offset 16
 1941 0004 00AF     	 add r7,sp,#0
 1942              	.LCFI160:
 1943              	 .cfi_def_cfa_register 7
 1944 0006 7860     	 str r0,[r7,#4]
 1945 0008 0B46     	 mov r3,r1
 1946 000a FB70     	 strb r3,[r7,#3]
 966:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPassiveLevel:Invalid handle_ptr" , (handle_ptr != NULL))
 967:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPassiveLevel:Invalid pwm_output_passive_level " ,
 968:../Dave/Generated/PWM/pwm.c ****               (pwm_output_passive_level < PWM_OUTPUT_PASSIVE_LEVEL_MAX));
 969:../Dave/Generated/PWM/pwm.c **** 
 970:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
 971:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 1947              	 .loc 2 971 0
 1948 000c 7B68     	 ldr r3,[r7,#4]
 1949 000e 93F82830 	 ldrb r3,[r3,#40]
 1950 0012 002B     	 cmp r3,#0
 1951 0014 0ED1     	 bne .L85
 972:../Dave/Generated/PWM/pwm.c ****   {
 973:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_SLICE_SetPassiveLevel(handle_ptr->ccu4_slice_ptr,
 1952              	 .loc 2 973 0
 1953 0016 7B68     	 ldr r3,[r7,#4]
 1954 0018 9A68     	 ldr r2,[r3,#8]
 1955 001a FB78     	 ldrb r3,[r7,#3]
 1956 001c 1046     	 mov r0,r2
 1957 001e 1946     	 mov r1,r3
 1958 0020 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPassiveLevel
 974:../Dave/Generated/PWM/pwm.c ****   		                         (XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t)pwm_output_passive_level);
 975:../Dave/Generated/PWM/pwm.c **** 
 976:../Dave/Generated/PWM/pwm.c ****     XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 1959              	 .loc 2 976 0
 1960 0024 7B68     	 ldr r3,[r7,#4]
 1961 0026 5A68     	 ldr r2,[r3,#4]
 1962 0028 7B68     	 ldr r3,[r7,#4]
 1963 002a 5B6A     	 ldr r3,[r3,#36]
 1964 002c 1046     	 mov r0,r2
 1965 002e 1946     	 mov r1,r3
 1966 0030 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 1967              	.L85:
 977:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_SetPassiveLevel:CCU4 slice, passive level changed")
 978:../Dave/Generated/PWM/pwm.c ****   }
 979:../Dave/Generated/PWM/pwm.c **** #endif
 980:../Dave/Generated/PWM/pwm.c **** 
 981:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
 982:../Dave/Generated/PWM/pwm.c ****   if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
 983:../Dave/Generated/PWM/pwm.c ****   {
 984:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_SLICE_SetPassiveLevel(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_OUTPUT_0,
 985:../Dave/Generated/PWM/pwm.c ****     		                        (XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t)pwm_output_passive_level);
 986:../Dave/Generated/PWM/pwm.c **** 
 987:../Dave/Generated/PWM/pwm.c ****     XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
 988:../Dave/Generated/PWM/pwm.c ****     XMC_DEBUG("PWM_SetPassiveLevel:CCU8 slice, passive level changed")
 989:../Dave/Generated/PWM/pwm.c ****   }
 990:../Dave/Generated/PWM/pwm.c **** #endif
 991:../Dave/Generated/PWM/pwm.c **** }
 1968              	 .loc 2 991 0
 1969 0034 0837     	 adds r7,r7,#8
 1970              	.LCFI161:
 1971              	 .cfi_def_cfa_offset 8
 1972 0036 BD46     	 mov sp,r7
 1973              	.LCFI162:
 1974              	 .cfi_def_cfa_register 13
 1975              	 
 1976 0038 80BD     	 pop {r7,pc}
 1977              	 .cfi_endproc
 1978              	.LFE239:
 1980 003a 00BF     	 .section .text.PWM_SetPeriodMatchValue,"ax",%progbits
 1981              	 .align 2
 1982              	 .global PWM_SetPeriodMatchValue
 1983              	 .thumb
 1984              	 .thumb_func
 1986              	PWM_SetPeriodMatchValue:
 1987              	.LFB240:
 992:../Dave/Generated/PWM/pwm.c **** 
 993:../Dave/Generated/PWM/pwm.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 994:../Dave/Generated/PWM/pwm.c **** /*Configures the period register */
 995:../Dave/Generated/PWM/pwm.c **** PWM_STATUS_t PWM_SetPeriodMatchValue(PWM_t *const handle_ptr, uint32_t period_match_value)
 996:../Dave/Generated/PWM/pwm.c **** {
 1988              	 .loc 2 996 0
 1989              	 .cfi_startproc
 1990              	 
 1991              	 
 1992 0000 80B5     	 push {r7,lr}
 1993              	.LCFI163:
 1994              	 .cfi_def_cfa_offset 8
 1995              	 .cfi_offset 7,-8
 1996              	 .cfi_offset 14,-4
 1997 0002 84B0     	 sub sp,sp,#16
 1998              	.LCFI164:
 1999              	 .cfi_def_cfa_offset 24
 2000 0004 00AF     	 add r7,sp,#0
 2001              	.LCFI165:
 2002              	 .cfi_def_cfa_register 7
 2003 0006 7860     	 str r0,[r7,#4]
 2004 0008 3960     	 str r1,[r7]
 997:../Dave/Generated/PWM/pwm.c ****   uint32_t compare;
 998:../Dave/Generated/PWM/pwm.c ****   PWM_STATUS_t status;
 999:../Dave/Generated/PWM/pwm.c **** 
1000:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPeriodMatchValue:Invalid handle_ptr" , (handle_ptr != NULL))
1001:../Dave/Generated/PWM/pwm.c ****   XMC_ASSERT("PWM_SetPeriodMatchValue:Invalid period_match_value" , (period_match_value <= PWM_MAX_
1002:../Dave/Generated/PWM/pwm.c **** 
1003:../Dave/Generated/PWM/pwm.c ****   status = handle_ptr->state;
 2005              	 .loc 2 1003 0
 2006 000a 7B68     	 ldr r3,[r7,#4]
 2007 000c 93F82930 	 ldrb r3,[r3,#41]
 2008 0010 FB73     	 strb r3,[r7,#15]
1004:../Dave/Generated/PWM/pwm.c **** 
1005:../Dave/Generated/PWM/pwm.c ****   if ( (status != PWM_STATUS_UNINITIALIZED) && (PWM_MAX_PERIOD_VALUE >= period_match_value))
 2009              	 .loc 2 1005 0
 2010 0012 FB7B     	 ldrb r3,[r7,#15]
 2011 0014 022B     	 cmp r3,#2
 2012 0016 36D0     	 beq .L88
 2013              	 .loc 2 1005 0 is_stmt 0 discriminator 1
 2014 0018 3B68     	 ldr r3,[r7]
 2015 001a B3F5803F 	 cmp r3,#65536
 2016 001e 32D2     	 bcs .L88
1006:../Dave/Generated/PWM/pwm.c ****   {
1007:../Dave/Generated/PWM/pwm.c ****     compare = (period_match_value * ((uint32_t)PWM_MAX_DUTY_CYCLE - handle_ptr->duty_cycle))
 2017              	 .loc 2 1007 0 is_stmt 1
 2018 0020 7B68     	 ldr r3,[r7,#4]
 2019 0022 1B6A     	 ldr r3,[r3,#32]
 2020 0024 C3F51C53 	 rsb r3,r3,#9984
 2021 0028 1033     	 adds r3,r3,#16
 2022 002a 3A68     	 ldr r2,[r7]
 2023 002c 02FB03F3 	 mul r3,r2,r3
 2024 0030 184A     	 ldr r2,.L92
 2025 0032 A2FB0323 	 umull r2,r3,r2,r3
 2026 0036 5B0B     	 lsrs r3,r3,#13
 2027 0038 BB60     	 str r3,[r7,#8]
1008:../Dave/Generated/PWM/pwm.c **** 		                           / ((uint32_t) 100 * PWM_DUTY_CYCLE_SCALE);
1009:../Dave/Generated/PWM/pwm.c **** 
1010:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU4
1011:../Dave/Generated/PWM/pwm.c ****     if (PWM_TIMER_SLICE_CCU4 == handle_ptr->timer_type)
 2028              	 .loc 2 1011 0
 2029 003a 7B68     	 ldr r3,[r7,#4]
 2030 003c 93F82830 	 ldrb r3,[r3,#40]
 2031 0040 002B     	 cmp r3,#0
 2032 0042 17D1     	 bne .L89
1012:../Dave/Generated/PWM/pwm.c ****     {
1013:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)period_match_value);
 2033              	 .loc 2 1013 0
 2034 0044 7B68     	 ldr r3,[r7,#4]
 2035 0046 9A68     	 ldr r2,[r3,#8]
 2036 0048 3B68     	 ldr r3,[r7]
 2037 004a 9BB2     	 uxth r3,r3
 2038 004c 1046     	 mov r0,r2
 2039 004e 1946     	 mov r1,r3
 2040 0050 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
1014:../Dave/Generated/PWM/pwm.c **** 
1015:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, (uint16_t)compare );
 2041              	 .loc 2 1015 0
 2042 0054 7B68     	 ldr r3,[r7,#4]
 2043 0056 9A68     	 ldr r2,[r3,#8]
 2044 0058 BB68     	 ldr r3,[r7,#8]
 2045 005a 9BB2     	 uxth r3,r3
 2046 005c 1046     	 mov r0,r2
 2047 005e 1946     	 mov r1,r3
 2048 0060 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
1016:../Dave/Generated/PWM/pwm.c **** 
1017:../Dave/Generated/PWM/pwm.c ****       XMC_CCU4_EnableShadowTransfer(handle_ptr->ccu4_kernel_ptr, handle_ptr->shadow_mask);
 2049              	 .loc 2 1017 0
 2050 0064 7B68     	 ldr r3,[r7,#4]
 2051 0066 5A68     	 ldr r2,[r3,#4]
 2052 0068 7B68     	 ldr r3,[r7,#4]
 2053 006a 5B6A     	 ldr r3,[r3,#36]
 2054 006c 1046     	 mov r0,r2
 2055 006e 1946     	 mov r1,r3
 2056 0070 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 2057              	.L89:
1018:../Dave/Generated/PWM/pwm.c ****     }
1019:../Dave/Generated/PWM/pwm.c **** #endif
1020:../Dave/Generated/PWM/pwm.c **** 
1021:../Dave/Generated/PWM/pwm.c **** #ifdef PWM_SLICE_USED_CCU8
1022:../Dave/Generated/PWM/pwm.c ****     if (PWM_TIMER_SLICE_CCU8 == handle_ptr->timer_type)
1023:../Dave/Generated/PWM/pwm.c ****     {
1024:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)period_match_value);
1025:../Dave/Generated/PWM/pwm.c **** 
1026:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
1027:../Dave/Generated/PWM/pwm.c ****           		                              (uint16_t)compare);
1028:../Dave/Generated/PWM/pwm.c **** 
1029:../Dave/Generated/PWM/pwm.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_kernel_ptr, handle_ptr->shadow_mask);
1030:../Dave/Generated/PWM/pwm.c ****     }
1031:../Dave/Generated/PWM/pwm.c **** #endif
1032:../Dave/Generated/PWM/pwm.c ****     handle_ptr->period_value =  period_match_value;
 2058              	 .loc 2 1032 0
 2059 0074 7B68     	 ldr r3,[r7,#4]
 2060 0076 3A68     	 ldr r2,[r7]
 2061 0078 DA61     	 str r2,[r3,#28]
1033:../Dave/Generated/PWM/pwm.c ****     handle_ptr->compare_value =  compare;
 2062              	 .loc 2 1033 0
 2063 007a 7B68     	 ldr r3,[r7,#4]
 2064 007c BA68     	 ldr r2,[r7,#8]
 2065 007e 9A61     	 str r2,[r3,#24]
1034:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_SUCCESS;
 2066              	 .loc 2 1034 0
 2067 0080 0023     	 movs r3,#0
 2068 0082 FB73     	 strb r3,[r7,#15]
 2069 0084 01E0     	 b .L90
 2070              	.L88:
1035:../Dave/Generated/PWM/pwm.c ****   }
1036:../Dave/Generated/PWM/pwm.c ****   else
1037:../Dave/Generated/PWM/pwm.c ****   {
1038:../Dave/Generated/PWM/pwm.c ****     status = PWM_STATUS_FAILURE;
 2071              	 .loc 2 1038 0
 2072 0086 0123     	 movs r3,#1
 2073 0088 FB73     	 strb r3,[r7,#15]
 2074              	.L90:
1039:../Dave/Generated/PWM/pwm.c ****   }
1040:../Dave/Generated/PWM/pwm.c **** 
1041:../Dave/Generated/PWM/pwm.c ****   return (status);
 2075              	 .loc 2 1041 0
 2076 008a FB7B     	 ldrb r3,[r7,#15]
1042:../Dave/Generated/PWM/pwm.c **** }
 2077              	 .loc 2 1042 0
 2078 008c 1846     	 mov r0,r3
 2079 008e 1037     	 adds r7,r7,#16
 2080              	.LCFI166:
 2081              	 .cfi_def_cfa_offset 8
 2082 0090 BD46     	 mov sp,r7
 2083              	.LCFI167:
 2084              	 .cfi_def_cfa_register 13
 2085              	 
 2086 0092 80BD     	 pop {r7,pc}
 2087              	.L93:
 2088              	 .align 2
 2089              	.L92:
 2090 0094 5917B7D1 	 .word -776530087
 2091              	 .cfi_endproc
 2092              	.LFE240:
 2094              	 .text
 2095              	.Letext0:
 2096              	 .file 3 "c:\\kits\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2097              	 .file 4 "c:\\kits\\dave\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2098              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2099              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc/xmc_gpio.h"
 2100              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc/xmc4_gpio.h"
 2101              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/XMCLib/inc/xmc4_scu.h"
 2102              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Dave/Generated/DAVE_Common.h"
 2103              	 .file 10 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 2104              	 .file 11 "../Dave/Generated/PWM/pwm.h"
 2105              	 .file 12 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/CMSIS/Include/core_cm4.h"
 2106              	 .file 13 "C:/Workspaces/DAVE-4.4.2-64Bit/FreeRtos_Led/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm.c
    {standard input}:20     .text.XMC_CCU4_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU4_EnableClock:00000000 XMC_CCU4_EnableClock
    {standard input}:71     .text.XMC_CCU4_DisableClock:00000000 $t
    {standard input}:75     .text.XMC_CCU4_DisableClock:00000000 XMC_CCU4_DisableClock
    {standard input}:121    .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 $t
    {standard input}:125    .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 XMC_CCU4_SLICE_IsTimerRunning
    {standard input}:170    .text.XMC_CCU4_SLICE_StartTimer:00000000 $t
    {standard input}:174    .text.XMC_CCU4_SLICE_StartTimer:00000000 XMC_CCU4_SLICE_StartTimer
    {standard input}:213    .text.XMC_CCU4_SLICE_StopTimer:00000000 $t
    {standard input}:217    .text.XMC_CCU4_SLICE_StopTimer:00000000 XMC_CCU4_SLICE_StopTimer
    {standard input}:256    .text.XMC_CCU4_SLICE_ClearTimer:00000000 $t
    {standard input}:260    .text.XMC_CCU4_SLICE_ClearTimer:00000000 XMC_CCU4_SLICE_ClearTimer
    {standard input}:299    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:303    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_SetTimerPeriodMatch
    {standard input}:344    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:348    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 XMC_CCU4_SLICE_SetTimerCompareMatch
    {standard input}:389    .text.XMC_CCU4_EnableShadowTransfer:00000000 $t
    {standard input}:393    .text.XMC_CCU4_EnableShadowTransfer:00000000 XMC_CCU4_EnableShadowTransfer
    {standard input}:433    .text.XMC_CCU4_SLICE_EnableEvent:00000000 $t
    {standard input}:437    .text.XMC_CCU4_SLICE_EnableEvent:00000000 XMC_CCU4_SLICE_EnableEvent
    {standard input}:483    .text.XMC_CCU4_SLICE_ClearEvent:00000000 $t
    {standard input}:487    .text.XMC_CCU4_SLICE_ClearEvent:00000000 XMC_CCU4_SLICE_ClearEvent
    {standard input}:533    .text.XMC_CCU4_SLICE_GetEvent:00000000 $t
    {standard input}:537    .text.XMC_CCU4_SLICE_GetEvent:00000000 XMC_CCU4_SLICE_GetEvent
    {standard input}:586    .text.PWM_lCCU4_Init:00000000 $t
    {standard input}:591    .text.PWM_lCCU4_Init:00000000 PWM_lCCU4_Init
    {standard input}:725    .text.PWM_lCCU4_ConfigInterrupts:00000000 PWM_lCCU4_ConfigInterrupts
    {standard input}:1505   .text.PWM_Start:00000000 PWM_Start
    {standard input}:720    .text.PWM_lCCU4_ConfigInterrupts:00000000 $t
    {standard input}:798    .text.PWM_lCCU4_Start:00000000 $t
    {standard input}:803    .text.PWM_lCCU4_Start:00000000 PWM_lCCU4_Start
    {standard input}:863    .text.PWM_lCCU4_Stop:00000000 $t
    {standard input}:868    .text.PWM_lCCU4_Stop:00000000 PWM_lCCU4_Stop
    {standard input}:927    .text.PWM_lCCU4_SetDutyCycle:00000000 $t
    {standard input}:932    .text.PWM_lCCU4_SetDutyCycle:00000000 PWM_lCCU4_SetDutyCycle
    {standard input}:1022   .text.PWM_lCCU4_SetDutyCycle:0000007c $d
    {standard input}:1027   .text.PWM_lCCU4_SetFreq:00000000 $t
    {standard input}:1032   .text.PWM_lCCU4_SetFreq:00000000 PWM_lCCU4_SetFreq
    {standard input}:1195   .text.PWM_lCCU4_SetFreq:000000e8 $d
    {standard input}:1200   .text.PWM_lCCU4_SetFreqAndDutyCycle:00000000 $t
    {standard input}:1205   .text.PWM_lCCU4_SetFreqAndDutyCycle:00000000 PWM_lCCU4_SetFreqAndDutyCycle
    {standard input}:1377   .text.PWM_lCCU4_SetFreqAndDutyCycle:000000f8 $d
    {standard input}:1382   .text.PWM_GetAppVersion:00000000 $t
    {standard input}:1387   .text.PWM_GetAppVersion:00000000 PWM_GetAppVersion
    {standard input}:1447   .text.PWM_Init:00000000 $t
    {standard input}:1452   .text.PWM_Init:00000000 PWM_Init
    {standard input}:1500   .text.PWM_Start:00000000 $t
    {standard input}:1545   .text.PWM_Stop:00000000 $t
    {standard input}:1550   .text.PWM_Stop:00000000 PWM_Stop
    {standard input}:1590   .text.PWM_SetDutyCycle:00000000 $t
    {standard input}:1595   .text.PWM_SetDutyCycle:00000000 PWM_SetDutyCycle
    {standard input}:1645   .text.PWM_SetFreq:00000000 $t
    {standard input}:1650   .text.PWM_SetFreq:00000000 PWM_SetFreq
    {standard input}:1700   .text.PWM_SetFreqAndDutyCycle:00000000 $t
    {standard input}:1705   .text.PWM_SetFreqAndDutyCycle:00000000 PWM_SetFreqAndDutyCycle
    {standard input}:1757   .text.PWM_GetTimerStatus:00000000 $t
    {standard input}:1762   .text.PWM_GetTimerStatus:00000000 PWM_GetTimerStatus
    {standard input}:1812   .text.PWM_GetInterruptStatus:00000000 $t
    {standard input}:1817   .text.PWM_GetInterruptStatus:00000000 PWM_GetInterruptStatus
    {standard input}:1871   .text.PWM_ClearEvent:00000000 $t
    {standard input}:1876   .text.PWM_ClearEvent:00000000 PWM_ClearEvent
    {standard input}:1922   .text.PWM_SetPassiveLevel:00000000 $t
    {standard input}:1927   .text.PWM_SetPassiveLevel:00000000 PWM_SetPassiveLevel
    {standard input}:1981   .text.PWM_SetPeriodMatchValue:00000000 $t
    {standard input}:1986   .text.PWM_SetPeriodMatchValue:00000000 PWM_SetPeriodMatchValue
    {standard input}:2090   .text.PWM_SetPeriodMatchValue:00000094 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU4_Init
XMC_CCU4_SLICE_CompareInit
XMC_GPIO_Init
XMC_CCU4_SLICE_SetInterruptNode
XMC_CCU4_SLICE_SetPrescaler
XMC_CCU4_SLICE_SetPassiveLevel
